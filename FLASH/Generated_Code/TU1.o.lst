   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TU1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  18              		.align	2
  21              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  22 0000 00000000 		.space	8
  22      00000000 
  23              		.section	.bss.INT_TPM0__DEFAULT_RTOS_ISRPARAM,"aw",%nobits
  24              		.align	2
  27              	INT_TPM0__DEFAULT_RTOS_ISRPARAM:
  28 0000 00000000 		.space	4
  29              		.section	.text.TU1_Init,"ax",%progbits
  30              		.align	2
  31              		.global	TU1_Init
  32              		.code	16
  33              		.thumb_func
  35              	TU1_Init:
  36              	.LFB0:
  37              		.file 1 "../Generated_Code/TU1.c"
   1:../Generated_Code/TU1.c **** /* ###################################################################
   2:../Generated_Code/TU1.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/TU1.c **** **     Filename    : TU1.c
   4:../Generated_Code/TU1.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/TU1.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/TU1.c **** **     Component   : TimerUnit_LDD
   7:../Generated_Code/TU1.c **** **     Version     : Component 01.164, Driver 01.11, CPU db: 3.00.000
   8:../Generated_Code/TU1.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/TU1.c **** **     Date/Time   : 2015-10-27, 09:17, # CodeGen: 12
  10:../Generated_Code/TU1.c **** **     Abstract    :
  11:../Generated_Code/TU1.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  12:../Generated_Code/TU1.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  13:../Generated_Code/TU1.c **** **     Settings    :
  14:../Generated_Code/TU1.c **** **          Component name                                 : TU1
  15:../Generated_Code/TU1.c **** **          Module name                                    : TPM0
  16:../Generated_Code/TU1.c **** **          Counter                                        : TPM0_CNT
  17:../Generated_Code/TU1.c **** **          Counter direction                              : Up
  18:../Generated_Code/TU1.c **** **          Counter width                                  : 16 bits
  19:../Generated_Code/TU1.c **** **          Value type                                     : Optimal
  20:../Generated_Code/TU1.c **** **          Input clock source                             : Internal
  21:../Generated_Code/TU1.c **** **            Counter frequency                            : 750 kHz
  22:../Generated_Code/TU1.c **** **          Counter restart                                : On-overrun
  23:../Generated_Code/TU1.c **** **            Overrun period                               : Auto select
  24:../Generated_Code/TU1.c **** **            Interrupt                                    : Enabled
  25:../Generated_Code/TU1.c **** **              Interrupt                                  : INT_TPM0
  26:../Generated_Code/TU1.c **** **              Interrupt priority                         : medium priority
  27:../Generated_Code/TU1.c **** **          Channel list                                   : 0
  28:../Generated_Code/TU1.c **** **          Initialization                                 : 
  29:../Generated_Code/TU1.c **** **            Enabled in init. code                        : yes
  30:../Generated_Code/TU1.c **** **            Auto initialization                          : no
  31:../Generated_Code/TU1.c **** **            Event mask                                   : 
  32:../Generated_Code/TU1.c **** **              OnCounterRestart                           : Enabled
  33:../Generated_Code/TU1.c **** **              OnChannel0                                 : Disabled
  34:../Generated_Code/TU1.c **** **              OnChannel1                                 : Disabled
  35:../Generated_Code/TU1.c **** **              OnChannel2                                 : Disabled
  36:../Generated_Code/TU1.c **** **              OnChannel3                                 : Disabled
  37:../Generated_Code/TU1.c **** **              OnChannel4                                 : Disabled
  38:../Generated_Code/TU1.c **** **              OnChannel5                                 : Disabled
  39:../Generated_Code/TU1.c **** **              OnChannel6                                 : Disabled
  40:../Generated_Code/TU1.c **** **              OnChannel7                                 : Disabled
  41:../Generated_Code/TU1.c **** **          CPU clock/configuration selection              : 
  42:../Generated_Code/TU1.c **** **            Clock configuration 0                        : This component enabled
  43:../Generated_Code/TU1.c **** **            Clock configuration 1                        : This component disabled
  44:../Generated_Code/TU1.c **** **            Clock configuration 2                        : This component disabled
  45:../Generated_Code/TU1.c **** **            Clock configuration 3                        : This component disabled
  46:../Generated_Code/TU1.c **** **            Clock configuration 4                        : This component disabled
  47:../Generated_Code/TU1.c **** **            Clock configuration 5                        : This component disabled
  48:../Generated_Code/TU1.c **** **            Clock configuration 6                        : This component disabled
  49:../Generated_Code/TU1.c **** **            Clock configuration 7                        : This component disabled
  50:../Generated_Code/TU1.c **** **     Contents    :
  51:../Generated_Code/TU1.c **** **         Init   - LDD_TDeviceData* TU1_Init(LDD_TUserData *UserDataPtr);
  52:../Generated_Code/TU1.c **** **         Deinit - void TU1_Deinit(LDD_TDeviceData *DeviceDataPtr);
  53:../Generated_Code/TU1.c **** **
  54:../Generated_Code/TU1.c **** **     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
  55:../Generated_Code/TU1.c **** **     All Rights Reserved.
  56:../Generated_Code/TU1.c **** **     
  57:../Generated_Code/TU1.c **** **     Redistribution and use in source and binary forms, with or without modification,
  58:../Generated_Code/TU1.c **** **     are permitted provided that the following conditions are met:
  59:../Generated_Code/TU1.c **** **     
  60:../Generated_Code/TU1.c **** **     o Redistributions of source code must retain the above copyright notice, this list
  61:../Generated_Code/TU1.c **** **       of conditions and the following disclaimer.
  62:../Generated_Code/TU1.c **** **     
  63:../Generated_Code/TU1.c **** **     o Redistributions in binary form must reproduce the above copyright notice, this
  64:../Generated_Code/TU1.c **** **       list of conditions and the following disclaimer in the documentation and/or
  65:../Generated_Code/TU1.c **** **       other materials provided with the distribution.
  66:../Generated_Code/TU1.c **** **     
  67:../Generated_Code/TU1.c **** **     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
  68:../Generated_Code/TU1.c **** **       contributors may be used to endorse or promote products derived from this
  69:../Generated_Code/TU1.c **** **       software without specific prior written permission.
  70:../Generated_Code/TU1.c **** **     
  71:../Generated_Code/TU1.c **** **     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  72:../Generated_Code/TU1.c **** **     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  73:../Generated_Code/TU1.c **** **     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  74:../Generated_Code/TU1.c **** **     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  75:../Generated_Code/TU1.c **** **     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  76:../Generated_Code/TU1.c **** **     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  77:../Generated_Code/TU1.c **** **     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  78:../Generated_Code/TU1.c **** **     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  79:../Generated_Code/TU1.c **** **     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  80:../Generated_Code/TU1.c **** **     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  81:../Generated_Code/TU1.c **** **     
  82:../Generated_Code/TU1.c **** **     http: www.freescale.com
  83:../Generated_Code/TU1.c **** **     mail: support@freescale.com
  84:../Generated_Code/TU1.c **** ** ###################################################################*/
  85:../Generated_Code/TU1.c **** /*!
  86:../Generated_Code/TU1.c **** ** @file TU1.c
  87:../Generated_Code/TU1.c **** ** @version 01.11
  88:../Generated_Code/TU1.c **** ** @brief
  89:../Generated_Code/TU1.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  90:../Generated_Code/TU1.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  91:../Generated_Code/TU1.c **** */         
  92:../Generated_Code/TU1.c **** /*!
  93:../Generated_Code/TU1.c **** **  @addtogroup TU1_module TU1 module documentation
  94:../Generated_Code/TU1.c **** **  @{
  95:../Generated_Code/TU1.c **** */         
  96:../Generated_Code/TU1.c **** 
  97:../Generated_Code/TU1.c **** /* MODULE TU1. */
  98:../Generated_Code/TU1.c **** 
  99:../Generated_Code/TU1.c **** #include "Events.h"
 100:../Generated_Code/TU1.c **** #include "TU1.h"
 101:../Generated_Code/TU1.c **** /* {Default RTOS Adapter} No RTOS includes */
 102:../Generated_Code/TU1.c **** #include "IO_Map.h"
 103:../Generated_Code/TU1.c **** 
 104:../Generated_Code/TU1.c **** #ifdef __cplusplus
 105:../Generated_Code/TU1.c **** extern "C" {
 106:../Generated_Code/TU1.c **** #endif 
 107:../Generated_Code/TU1.c **** 
 108:../Generated_Code/TU1.c **** 
 109:../Generated_Code/TU1.c **** typedef struct {
 110:../Generated_Code/TU1.c ****   LDD_TEventMask EnEvents;             /* Enable/Disable events mask */
 111:../Generated_Code/TU1.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
 112:../Generated_Code/TU1.c **** } TU1_TDeviceData;
 113:../Generated_Code/TU1.c **** 
 114:../Generated_Code/TU1.c **** typedef TU1_TDeviceData *TU1_TDeviceDataPtr; /* Pointer to the device data structure. */
 115:../Generated_Code/TU1.c **** 
 116:../Generated_Code/TU1.c **** /* {Default RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
 117:../Generated_Code/TU1.c **** static TU1_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
 118:../Generated_Code/TU1.c **** /* {Default RTOS Adapter} Global variable used for passing a parameter into ISR */
 119:../Generated_Code/TU1.c **** static TU1_TDeviceDataPtr INT_TPM0__DEFAULT_RTOS_ISRPARAM;
 120:../Generated_Code/TU1.c **** 
 121:../Generated_Code/TU1.c **** #define AVAILABLE_EVENTS_MASK (LDD_TEventMask)(LDD_TIMERUNIT_ON_COUNTER_RESTART)
 122:../Generated_Code/TU1.c **** 
 123:../Generated_Code/TU1.c **** /* Internal method prototypes */
 124:../Generated_Code/TU1.c **** /*
 125:../Generated_Code/TU1.c **** ** ===================================================================
 126:../Generated_Code/TU1.c **** **     Method      :  TU1_Init (component TimerUnit_LDD)
 127:../Generated_Code/TU1.c **** */
 128:../Generated_Code/TU1.c **** /*!
 129:../Generated_Code/TU1.c **** **     @brief
 130:../Generated_Code/TU1.c **** **         Initializes the device. Allocates memory for the device data
 131:../Generated_Code/TU1.c **** **         structure, allocates interrupt vectors and sets interrupt
 132:../Generated_Code/TU1.c **** **         priority, sets pin routing, sets timing, etc. If the
 133:../Generated_Code/TU1.c **** **         property ["Enable in init. code"] is set to "yes" value then
 134:../Generated_Code/TU1.c **** **         the device is also enabled (see the description of the
 135:../Generated_Code/TU1.c **** **         [Enable] method). In this case the [Enable] method is not
 136:../Generated_Code/TU1.c **** **         necessary and needn't to be generated. This method can be
 137:../Generated_Code/TU1.c **** **         called only once. Before the second call of Init the [Deinit]
 138:../Generated_Code/TU1.c **** **         must be called first.
 139:../Generated_Code/TU1.c **** **     @param
 140:../Generated_Code/TU1.c **** **         UserDataPtr     - Pointer to the user or
 141:../Generated_Code/TU1.c **** **                           RTOS specific data. This pointer will be
 142:../Generated_Code/TU1.c **** **                           passed as an event or callback parameter.
 143:../Generated_Code/TU1.c **** **     @return
 144:../Generated_Code/TU1.c **** **                         - Pointer to the dynamically allocated private
 145:../Generated_Code/TU1.c **** **                           structure or NULL if there was an error.
 146:../Generated_Code/TU1.c **** */
 147:../Generated_Code/TU1.c **** /* ===================================================================*/
 148:../Generated_Code/TU1.c **** LDD_TDeviceData* TU1_Init(LDD_TUserData *UserDataPtr)
 149:../Generated_Code/TU1.c **** {
  38              		.loc 1 149 0
  39              		.cfi_startproc
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 84B0     		sub	sp, sp, #16
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 24
  48 0004 00AF     		add	r7, sp, #0
  49              	.LCFI2:
  50              		.cfi_def_cfa_register 7
  51 0006 7860     		str	r0, [r7, #4]
 150:../Generated_Code/TU1.c ****   /* Allocate device structure */
 151:../Generated_Code/TU1.c ****   TU1_TDeviceData *DeviceDataPrv;
 152:../Generated_Code/TU1.c ****   /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer 
 153:../Generated_Code/TU1.c ****   DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  52              		.loc 1 153 0
  53 0008 274B     		ldr	r3, .L3
  54 000a FB60     		str	r3, [r7, #12]
 154:../Generated_Code/TU1.c ****   DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  55              		.loc 1 154 0
  56 000c FB68     		ldr	r3, [r7, #12]
  57 000e 7A68     		ldr	r2, [r7, #4]
  58 0010 5A60     		str	r2, [r3, #4]
 155:../Generated_Code/TU1.c ****   /* Interrupt vector(s) allocation */
 156:../Generated_Code/TU1.c ****   /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the glo
 157:../Generated_Code/TU1.c ****   INT_TPM0__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
  59              		.loc 1 157 0
  60 0012 264B     		ldr	r3, .L3+4
  61 0014 FA68     		ldr	r2, [r7, #12]
  62 0016 1A60     		str	r2, [r3]
 158:../Generated_Code/TU1.c ****   /* SIM_SCGC6: TPM0=1 */
 159:../Generated_Code/TU1.c ****   SIM_SCGC6 |= SIM_SCGC6_TPM0_MASK;
  63              		.loc 1 159 0
  64 0018 254A     		ldr	r2, .L3+8
  65 001a 2549     		ldr	r1, .L3+8
  66 001c 254B     		ldr	r3, .L3+12
  67 001e CB58     		ldr	r3, [r1, r3]
  68 0020 8021     		mov	r1, #128
  69 0022 4904     		lsl	r1, r1, #17
  70 0024 1943     		orr	r1, r3
  71 0026 234B     		ldr	r3, .L3+12
  72 0028 D150     		str	r1, [r2, r3]
 160:../Generated_Code/TU1.c ****   /* TPM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 161:../Generated_Code/TU1.c ****   TPM0_SC = (TPM_SC_CMOD(0x00) | TPM_SC_PS(0x00)); /* Clear status and control register */
  73              		.loc 1 161 0
  74 002a 234B     		ldr	r3, .L3+16
  75 002c 0022     		mov	r2, #0
  76 002e 1A60     		str	r2, [r3]
 162:../Generated_Code/TU1.c ****   /* TPM0_CNT: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUN
 163:../Generated_Code/TU1.c ****   TPM0_CNT = TPM_CNT_COUNT(0x00);      /* Reset counter register */
  77              		.loc 1 163 0
  78 0030 214B     		ldr	r3, .L3+16
  79 0032 0022     		mov	r2, #0
  80 0034 5A60     		str	r2, [r3, #4]
 164:../Generated_Code/TU1.c ****   /* TPM0_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 165:../Generated_Code/TU1.c ****   TPM0_C0SC = 0x00U;                   /* Clear channel status and control register */
  81              		.loc 1 165 0
  82 0036 204B     		ldr	r3, .L3+16
  83 0038 0022     		mov	r2, #0
  84 003a DA60     		str	r2, [r3, #12]
 166:../Generated_Code/TU1.c ****   /* TPM0_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 167:../Generated_Code/TU1.c ****   TPM0_C1SC = 0x00U;                   /* Clear channel status and control register */
  85              		.loc 1 167 0
  86 003c 1E4B     		ldr	r3, .L3+16
  87 003e 0022     		mov	r2, #0
  88 0040 5A61     		str	r2, [r3, #20]
 168:../Generated_Code/TU1.c ****   /* TPM0_C2SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 169:../Generated_Code/TU1.c ****   TPM0_C2SC = 0x00U;                   /* Clear channel status and control register */
  89              		.loc 1 169 0
  90 0042 1D4B     		ldr	r3, .L3+16
  91 0044 0022     		mov	r2, #0
  92 0046 DA61     		str	r2, [r3, #28]
 170:../Generated_Code/TU1.c ****   /* TPM0_C3SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 171:../Generated_Code/TU1.c ****   TPM0_C3SC = 0x00U;                   /* Clear channel status and control register */
  93              		.loc 1 171 0
  94 0048 1B4B     		ldr	r3, .L3+16
  95 004a 0022     		mov	r2, #0
  96 004c 5A62     		str	r2, [r3, #36]
 172:../Generated_Code/TU1.c ****   /* TPM0_C4SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 173:../Generated_Code/TU1.c ****   TPM0_C4SC = 0x00U;                   /* Clear channel status and control register */
  97              		.loc 1 173 0
  98 004e 1A4B     		ldr	r3, .L3+16
  99 0050 0022     		mov	r2, #0
 100 0052 DA62     		str	r2, [r3, #44]
 174:../Generated_Code/TU1.c ****   /* TPM0_C5SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 175:../Generated_Code/TU1.c ****   TPM0_C5SC = 0x00U;                   /* Clear channel status and control register */
 101              		.loc 1 175 0
 102 0054 184B     		ldr	r3, .L3+16
 103 0056 0022     		mov	r2, #0
 104 0058 5A63     		str	r2, [r3, #52]
 176:../Generated_Code/TU1.c ****   /* TPM0_MOD: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MOD=
 177:../Generated_Code/TU1.c ****   TPM0_MOD = TPM_MOD_MOD(0xFFFF);      /* Set up modulo register */
 105              		.loc 1 177 0
 106 005a 174B     		ldr	r3, .L3+16
 107 005c 174A     		ldr	r2, .L3+20
 108 005e 9A60     		str	r2, [r3, #8]
 178:../Generated_Code/TU1.c ****   DeviceDataPrv->EnEvents = 0x0100U;   /* Enable selected events */
 109              		.loc 1 178 0
 110 0060 FB68     		ldr	r3, [r7, #12]
 111 0062 8022     		mov	r2, #128
 112 0064 5200     		lsl	r2, r2, #1
 113 0066 1A60     		str	r2, [r3]
 179:../Generated_Code/TU1.c ****   /* NVIC_IPR4: PRI_17=0x80 */
 180:../Generated_Code/TU1.c ****   NVIC_IPR4 = (uint32_t)((NVIC_IPR4 & (uint32_t)~(uint32_t)(
 114              		.loc 1 180 0
 115 0068 154A     		ldr	r2, .L3+24
 116 006a 1549     		ldr	r1, .L3+24
 117 006c C423     		mov	r3, #196
 118 006e 9B00     		lsl	r3, r3, #2
 119 0070 C958     		ldr	r1, [r1, r3]
 120 0072 144B     		ldr	r3, .L3+28
 121 0074 0B40     		and	r3, r1
 122 0076 8021     		mov	r1, #128
 123 0078 0902     		lsl	r1, r1, #8
 124 007a 1943     		orr	r1, r3
 125 007c C423     		mov	r3, #196
 126 007e 9B00     		lsl	r3, r3, #2
 127 0080 D150     		str	r1, [r2, r3]
 181:../Generated_Code/TU1.c ****                NVIC_IP_PRI_17(0x7F)
 182:../Generated_Code/TU1.c ****               )) | (uint32_t)(
 183:../Generated_Code/TU1.c ****                NVIC_IP_PRI_17(0x80)
 184:../Generated_Code/TU1.c ****               ));
 185:../Generated_Code/TU1.c ****   /* NVIC_ISER: SETENA|=0x00020000 */
 186:../Generated_Code/TU1.c ****   NVIC_ISER |= NVIC_ISER_SETENA(0x00020000);
 128              		.loc 1 186 0
 129 0082 0F4B     		ldr	r3, .L3+24
 130 0084 0E4A     		ldr	r2, .L3+24
 131 0086 1268     		ldr	r2, [r2]
 132 0088 8021     		mov	r1, #128
 133 008a 8902     		lsl	r1, r1, #10
 134 008c 0A43     		orr	r2, r1
 135 008e 1A60     		str	r2, [r3]
 187:../Generated_Code/TU1.c ****   /* TPM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 188:../Generated_Code/TU1.c ****   TPM0_SC = (TPM_SC_TOIE_MASK | TPM_SC_CMOD(0x01) | TPM_SC_PS(0x05)); /* Set up status and control 
 136              		.loc 1 188 0
 137 0090 094B     		ldr	r3, .L3+16
 138 0092 4D22     		mov	r2, #77
 139 0094 1A60     		str	r2, [r3]
 189:../Generated_Code/TU1.c ****   /* Registration of the device structure */
 190:../Generated_Code/TU1.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU1_ID,DeviceDataPrv);
 140              		.loc 1 190 0
 141 0096 0C4B     		ldr	r3, .L3+32
 142 0098 FA68     		ldr	r2, [r7, #12]
 143 009a 5A60     		str	r2, [r3, #4]
 191:../Generated_Code/TU1.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 144              		.loc 1 191 0
 145 009c FB68     		ldr	r3, [r7, #12]
 192:../Generated_Code/TU1.c **** }
 146              		.loc 1 192 0
 147 009e 181C     		mov	r0, r3
 148 00a0 BD46     		mov	sp, r7
 149 00a2 04B0     		add	sp, sp, #16
 150              		@ sp needed for prologue
 151 00a4 80BD     		pop	{r7, pc}
 152              	.L4:
 153 00a6 C046     		.align	2
 154              	.L3:
 155 00a8 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
 156 00ac 00000000 		.word	INT_TPM0__DEFAULT_RTOS_ISRPARAM
 157 00b0 00700440 		.word	1074032640
 158 00b4 3C100000 		.word	4156
 159 00b8 00800340 		.word	1073971200
 160 00bc FFFF0000 		.word	65535
 161 00c0 00E100E0 		.word	-536813312
 162 00c4 FF00FFFF 		.word	-65281
 163 00c8 00000000 		.word	PE_LDD_DeviceDataList
 164              		.cfi_endproc
 165              	.LFE0:
 167              		.section	.text.TU1_Deinit,"ax",%progbits
 168              		.align	2
 169              		.global	TU1_Deinit
 170              		.code	16
 171              		.thumb_func
 173              	TU1_Deinit:
 174              	.LFB1:
 193:../Generated_Code/TU1.c **** 
 194:../Generated_Code/TU1.c **** /*
 195:../Generated_Code/TU1.c **** ** ===================================================================
 196:../Generated_Code/TU1.c **** **     Method      :  TU1_Deinit (component TimerUnit_LDD)
 197:../Generated_Code/TU1.c **** */
 198:../Generated_Code/TU1.c **** /*!
 199:../Generated_Code/TU1.c **** **     @brief
 200:../Generated_Code/TU1.c **** **         Deinitializes the device. Switches off the device, frees the
 201:../Generated_Code/TU1.c **** **         device data structure memory, interrupts vectors, etc.
 202:../Generated_Code/TU1.c **** **     @param
 203:../Generated_Code/TU1.c **** **         DeviceDataPtr   - Device data structure
 204:../Generated_Code/TU1.c **** **                           pointer returned by Init method
 205:../Generated_Code/TU1.c **** */
 206:../Generated_Code/TU1.c **** /* ===================================================================*/
 207:../Generated_Code/TU1.c **** void TU1_Deinit(LDD_TDeviceData *DeviceDataPtr)
 208:../Generated_Code/TU1.c **** {
 175              		.loc 1 208 0
 176              		.cfi_startproc
 177 0000 80B5     		push	{r7, lr}
 178              	.LCFI3:
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 84B0     		sub	sp, sp, #16
 183              	.LCFI4:
 184              		.cfi_def_cfa_offset 24
 185 0004 00AF     		add	r7, sp, #0
 186              	.LCFI5:
 187              		.cfi_def_cfa_register 7
 188 0006 7860     		str	r0, [r7, #4]
 209:../Generated_Code/TU1.c ****   TU1_TDeviceData *DeviceDataPrv = (TU1_TDeviceData *)DeviceDataPtr;
 189              		.loc 1 209 0
 190 0008 7B68     		ldr	r3, [r7, #4]
 191 000a FB60     		str	r3, [r7, #12]
 210:../Generated_Code/TU1.c **** 
 211:../Generated_Code/TU1.c ****   (void)DeviceDataPrv;
 212:../Generated_Code/TU1.c ****   TPM_PDD_SelectPrescalerSource(TPM0_BASE_PTR, TPM_PDD_DISABLED);
 192              		.loc 1 212 0
 193 000c 054B     		ldr	r3, .L6
 194 000e 054A     		ldr	r2, .L6
 195 0010 1268     		ldr	r2, [r2]
 196 0012 9821     		mov	r1, #152
 197 0014 8A43     		bic	r2, r1
 198 0016 1A60     		str	r2, [r3]
 213:../Generated_Code/TU1.c ****   /* Interrupt vector(s) deallocation */
 214:../Generated_Code/TU1.c ****   /* {Default RTOS Adapter} Restore interrupt vector: IVT is static, no code is generated */
 215:../Generated_Code/TU1.c ****   /* Unregistration of the device structure */
 216:../Generated_Code/TU1.c ****   PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_TU1_ID);
 199              		.loc 1 216 0
 200 0018 034B     		ldr	r3, .L6+4
 201 001a 0022     		mov	r2, #0
 202 001c 5A60     		str	r2, [r3, #4]
 217:../Generated_Code/TU1.c ****   /* Deallocation of the device structure */
 218:../Generated_Code/TU1.c ****   /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no dealloc
 219:../Generated_Code/TU1.c **** }
 203              		.loc 1 219 0
 204 001e BD46     		mov	sp, r7
 205 0020 04B0     		add	sp, sp, #16
 206              		@ sp needed for prologue
 207 0022 80BD     		pop	{r7, pc}
 208              	.L7:
 209              		.align	2
 210              	.L6:
 211 0024 00800340 		.word	1073971200
 212 0028 00000000 		.word	PE_LDD_DeviceDataList
 213              		.cfi_endproc
 214              	.LFE1:
 216              		.section	.text.TU1_Interrupt,"ax",%progbits
 217              		.align	2
 218              		.global	TU1_Interrupt
 219              		.code	16
 220              		.thumb_func
 222              	TU1_Interrupt:
 223              	.LFB2:
 220:../Generated_Code/TU1.c **** 
 221:../Generated_Code/TU1.c **** /*
 222:../Generated_Code/TU1.c **** ** ===================================================================
 223:../Generated_Code/TU1.c **** **     Method      :  TU1_Interrupt (component TimerUnit_LDD)
 224:../Generated_Code/TU1.c **** **
 225:../Generated_Code/TU1.c **** **     Description :
 226:../Generated_Code/TU1.c **** **         The method services the interrupt of the selected peripheral(s)
 227:../Generated_Code/TU1.c **** **         and eventually invokes event(s) of the component.
 228:../Generated_Code/TU1.c **** **         This method is internal. It is used by Processor Expert only.
 229:../Generated_Code/TU1.c **** ** ===================================================================
 230:../Generated_Code/TU1.c **** */
 231:../Generated_Code/TU1.c **** PE_ISR(TU1_Interrupt)
 232:../Generated_Code/TU1.c **** {
 224              		.loc 1 232 0
 225              		.cfi_startproc
 226 0000 80B5     		push	{r7, lr}
 227              	.LCFI6:
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 7, -8
 230              		.cfi_offset 14, -4
 231 0002 82B0     		sub	sp, sp, #8
 232              	.LCFI7:
 233              		.cfi_def_cfa_offset 16
 234 0004 00AF     		add	r7, sp, #0
 235              	.LCFI8:
 236              		.cfi_def_cfa_register 7
 233:../Generated_Code/TU1.c ****   /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
 234:../Generated_Code/TU1.c ****   TU1_TDeviceDataPtr DeviceDataPrv = INT_TPM0__DEFAULT_RTOS_ISRPARAM;
 237              		.loc 1 234 0
 238 0006 134B     		ldr	r3, .L11
 239 0008 1B68     		ldr	r3, [r3]
 240 000a 3B60     		str	r3, [r7]
 235:../Generated_Code/TU1.c **** 
 236:../Generated_Code/TU1.c ****   LDD_TEventMask State = 0U;
 241              		.loc 1 236 0
 242 000c 0023     		mov	r3, #0
 243 000e 7B60     		str	r3, [r7, #4]
 237:../Generated_Code/TU1.c **** 
 238:../Generated_Code/TU1.c ****   if ((TPM_PDD_GetOverflowInterruptFlag(TPM0_BASE_PTR)) != 0U) { /* Is the overflow interrupt flag 
 244              		.loc 1 238 0
 245 0010 114B     		ldr	r3, .L11+4
 246 0012 1A68     		ldr	r2, [r3]
 247 0014 8023     		mov	r3, #128
 248 0016 1340     		and	r3, r2
 249 0018 04D0     		beq	.L9
 239:../Generated_Code/TU1.c ****     State |= LDD_TIMERUNIT_ON_COUNTER_RESTART; /* and set mask */
 250              		.loc 1 239 0
 251 001a 7B68     		ldr	r3, [r7, #4]
 252 001c 8022     		mov	r2, #128
 253 001e 5200     		lsl	r2, r2, #1
 254 0020 1343     		orr	r3, r2
 255 0022 7B60     		str	r3, [r7, #4]
 256              	.L9:
 240:../Generated_Code/TU1.c ****   }
 241:../Generated_Code/TU1.c ****   State &= DeviceDataPrv->EnEvents;    /* Handle only enabled interrupts */
 257              		.loc 1 241 0
 258 0024 3B68     		ldr	r3, [r7]
 259 0026 1A68     		ldr	r2, [r3]
 260 0028 7B68     		ldr	r3, [r7, #4]
 261 002a 1340     		and	r3, r2
 262 002c 7B60     		str	r3, [r7, #4]
 242:../Generated_Code/TU1.c ****   if (State & LDD_TIMERUNIT_ON_COUNTER_RESTART) { /* Is the overflow interrupt flag pending? */
 263              		.loc 1 242 0
 264 002e 7A68     		ldr	r2, [r7, #4]
 265 0030 8023     		mov	r3, #128
 266 0032 5B00     		lsl	r3, r3, #1
 267 0034 1340     		and	r3, r2
 268 0036 0AD0     		beq	.L8
 243:../Generated_Code/TU1.c ****     TPM_PDD_ClearOverflowInterruptFlag(TPM0_BASE_PTR); /* Clear flag */
 269              		.loc 1 243 0
 270 0038 074B     		ldr	r3, .L11+4
 271 003a 074A     		ldr	r2, .L11+4
 272 003c 1268     		ldr	r2, [r2]
 273 003e 8021     		mov	r1, #128
 274 0040 0A43     		orr	r2, r1
 275 0042 1A60     		str	r2, [r3]
 244:../Generated_Code/TU1.c ****     TU1_OnCounterRestart(DeviceDataPrv->UserDataPtr); /* Invoke OnCounterRestart event */
 276              		.loc 1 244 0
 277 0044 3B68     		ldr	r3, [r7]
 278 0046 5B68     		ldr	r3, [r3, #4]
 279 0048 181C     		mov	r0, r3
 280 004a FFF7FEFF 		bl	TU1_OnCounterRestart
 281              	.L8:
 245:../Generated_Code/TU1.c ****   }
 246:../Generated_Code/TU1.c **** }
 282              		.loc 1 246 0
 283 004e BD46     		mov	sp, r7
 284 0050 02B0     		add	sp, sp, #8
 285              		@ sp needed for prologue
 286 0052 80BD     		pop	{r7, pc}
 287              	.L12:
 288              		.align	2
 289              	.L11:
 290 0054 00000000 		.word	INT_TPM0__DEFAULT_RTOS_ISRPARAM
 291 0058 00800340 		.word	1073971200
 292              		.cfi_endproc
 293              	.LFE2:
 295              		.text
 296              	.Letext0:
 297              		.file 2 "D:/CodeWarrior/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 298              		.file 3 "D:/PlikiI/Synergia/Jacht/workspace_yacht/I2C_1/Generated_Code/PE_Types.h"
 299              		.file 4 "D:/CodeWarrior/CW MCU v10.6/MCU/ProcessorExpert/lib/Kinetis/iofiles/MKL25Z4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TU1.c
C:\Users\SKRA~1\AppData\Local\Temp\ccWDVLFg.s:18     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\SKRA~1\AppData\Local\Temp\ccWDVLFg.s:21     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\SKRA~1\AppData\Local\Temp\ccWDVLFg.s:24     .bss.INT_TPM0__DEFAULT_RTOS_ISRPARAM:00000000 $d
C:\Users\SKRA~1\AppData\Local\Temp\ccWDVLFg.s:27     .bss.INT_TPM0__DEFAULT_RTOS_ISRPARAM:00000000 INT_TPM0__DEFAULT_RTOS_ISRPARAM
C:\Users\SKRA~1\AppData\Local\Temp\ccWDVLFg.s:30     .text.TU1_Init:00000000 $t
C:\Users\SKRA~1\AppData\Local\Temp\ccWDVLFg.s:35     .text.TU1_Init:00000000 TU1_Init
C:\Users\SKRA~1\AppData\Local\Temp\ccWDVLFg.s:155    .text.TU1_Init:000000a8 $d
C:\Users\SKRA~1\AppData\Local\Temp\ccWDVLFg.s:168    .text.TU1_Deinit:00000000 $t
C:\Users\SKRA~1\AppData\Local\Temp\ccWDVLFg.s:173    .text.TU1_Deinit:00000000 TU1_Deinit
C:\Users\SKRA~1\AppData\Local\Temp\ccWDVLFg.s:211    .text.TU1_Deinit:00000024 $d
C:\Users\SKRA~1\AppData\Local\Temp\ccWDVLFg.s:217    .text.TU1_Interrupt:00000000 $t
C:\Users\SKRA~1\AppData\Local\Temp\ccWDVLFg.s:222    .text.TU1_Interrupt:00000000 TU1_Interrupt
C:\Users\SKRA~1\AppData\Local\Temp\ccWDVLFg.s:290    .text.TU1_Interrupt:00000054 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList
TU1_OnCounterRestart
