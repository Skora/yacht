   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ProcessorExpert.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	InData,6,4
  18              		.comm	mma845_tmp,2,2
  19              		.comm	LtcInData,7,4
  20              		.comm	MyI2CPtr,4,4
  21              		.comm	MyTimerPtr,4,4
  22              		.comm	Myout_I2CPtr,4,4
  23              		.section	.rodata
  24              		.align	2
  25              	.LC7:
  26 0000 74696C74 		.ascii	"tilt =  %d  ang_pos =ERORR current= %d\000"
  26      203D2020 
  26      25642020 
  26      616E675F 
  26      706F7320 
  27 0027 00       		.align	2
  28              	.LC9:
  29 0028 74696C74 		.ascii	"tilt =  %d  ang_pos =  %d current= %d\000"
  29      203D2020 
  29      25642020 
  29      616E675F 
  29      706F7320 
  30 004e 0000     		.section	.text.main,"ax",%progbits
  31              		.align	2
  32              		.global	main
  33              		.code	16
  34              		.thumb_func
  36              	main:
  37              	.LFB0:
  38              		.file 1 "../Sources/ProcessorExpert.c"
   1:../Sources/ProcessorExpert.c **** /** ###################################################################
   2:../Sources/ProcessorExpert.c **** **     Filename    : ProcessorExpert.c
   3:../Sources/ProcessorExpert.c **** **     Project     : ProcessorExpert
   4:../Sources/ProcessorExpert.c **** **     Processor   : MKL25Z128VLK4
   5:../Sources/ProcessorExpert.c **** **     Version     : Driver 01.01
   6:../Sources/ProcessorExpert.c **** **     Compiler    : IAR ARM C Compiler
   7:../Sources/ProcessorExpert.c **** **     Date/Time   : 2012-08-27, 15:21, # CodeGen: 0
   8:../Sources/ProcessorExpert.c **** **     Abstract    :
   9:../Sources/ProcessorExpert.c **** **         Main module.
  10:../Sources/ProcessorExpert.c **** **         This module contains user's application code.
  11:../Sources/ProcessorExpert.c **** **     Settings    :
  12:../Sources/ProcessorExpert.c **** **     Contents    :
  13:../Sources/ProcessorExpert.c **** **         No public methods
  14:../Sources/ProcessorExpert.c **** **
  15:../Sources/ProcessorExpert.c **** ** ###################################################################*/
  16:../Sources/ProcessorExpert.c **** /* MODULE ProcessorExpert */
  17:../Sources/ProcessorExpert.c **** 
  18:../Sources/ProcessorExpert.c **** 
  19:../Sources/ProcessorExpert.c **** /* Including needed modules to compile this module/procedure */
  20:../Sources/ProcessorExpert.c **** #include "Cpu.h"
  21:../Sources/ProcessorExpert.c **** #include "Events.h"
  22:../Sources/ProcessorExpert.c **** #include "I2C2.h"
  23:../Sources/ProcessorExpert.c **** #include "out_I2C.h"
  24:../Sources/ProcessorExpert.c **** #include "IO1.h"
  25:../Sources/ProcessorExpert.c **** #include "WAIT1.h"
  26:../Sources/ProcessorExpert.c **** #include "LEDgreen.h"
  27:../Sources/ProcessorExpert.c **** #include "LEDpin1.h"
  28:../Sources/ProcessorExpert.c **** #include "BitIoLdd1.h"
  29:../Sources/ProcessorExpert.c **** #include "LEDred.h"
  30:../Sources/ProcessorExpert.c **** #include "LEDpin2.h"
  31:../Sources/ProcessorExpert.c **** #include "BitIoLdd2.h"
  32:../Sources/ProcessorExpert.c **** #include "out_I2C.h"
  33:../Sources/ProcessorExpert.c **** #include "TU1.h"
  34:../Sources/ProcessorExpert.c **** #include "CsIO1.h"
  35:../Sources/ProcessorExpert.c **** /* Including shared modules, which are used for whole project */
  36:../Sources/ProcessorExpert.c **** #include "PE_Types.h"
  37:../Sources/ProcessorExpert.c **** #include "PE_Error.h"
  38:../Sources/ProcessorExpert.c **** #include "PE_Const.h"
  39:../Sources/ProcessorExpert.c **** #include "IO_Map.h"
  40:../Sources/ProcessorExpert.c **** 
  41:../Sources/ProcessorExpert.c **** /* User includes (#include below this line is not maintained by Processor Expert) */
  42:../Sources/ProcessorExpert.c **** #include "stdio.h"
  43:../Sources/ProcessorExpert.c **** #include "AS5040.h"
  44:../Sources/ProcessorExpert.c **** #include "mma8453.h"
  45:../Sources/ProcessorExpert.c **** #include "LTC2945.h"
  46:../Sources/ProcessorExpert.c **** 
  47:../Sources/ProcessorExpert.c **** /* User includes (#include below this line is not maintained by Processor Expert) */
  48:../Sources/ProcessorExpert.c **** extern AS5040data as5040data;
  49:../Sources/ProcessorExpert.c **** extern MMA845X mma845x;
  50:../Sources/ProcessorExpert.c **** extern LTC2945 ltc2945;
  51:../Sources/ProcessorExpert.c **** 
  52:../Sources/ProcessorExpert.c **** 
  53:../Sources/ProcessorExpert.c **** LDD_TDeviceData *MyI2CPtr;
  54:../Sources/ProcessorExpert.c **** LDD_TDeviceData *MyTimerPtr;
  55:../Sources/ProcessorExpert.c **** LDD_TDeviceData *Myout_I2CPtr;
  56:../Sources/ProcessorExpert.c **** 
  57:../Sources/ProcessorExpert.c **** 
  58:../Sources/ProcessorExpert.c **** int main(void)
  59:../Sources/ProcessorExpert.c **** {
  39              		.loc 1 59 0
  40              		.cfi_startproc
  41 0000 80B5     		push	{r7, lr}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 82B0     		sub	sp, sp, #8
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 16
  49 0004 00AF     		add	r7, sp, #0
  50              	.LCFI2:
  51              		.cfi_def_cfa_register 7
  60:../Sources/ProcessorExpert.c **** 	uint16_t i=0;
  52              		.loc 1 60 0
  53 0006 BB1D     		add	r3, r7, #6
  54 0008 0022     		mov	r2, #0
  55 000a 1A80     		strh	r2, [r3]
  61:../Sources/ProcessorExpert.c **** 
  62:../Sources/ProcessorExpert.c **** 	/*** Processor Expert internal initialization. DON'T REMOVE THIS CODE!!! ***/
  63:../Sources/ProcessorExpert.c **** 	PE_low_level_init();
  56              		.loc 1 63 0
  57 000c FFF7FEFF 		bl	PE_low_level_init
  64:../Sources/ProcessorExpert.c **** 	/*** End of Processor Expert internal initialization. 
  65:../Sources/ProcessorExpert.c **** 	 *                    ***/
  66:../Sources/ProcessorExpert.c **** 	LEDred_Off();
  58              		.loc 1 66 0
  59 0010 2D4B     		ldr	r3, .L5
  60 0012 1B69     		ldr	r3, [r3, #16]
  61 0014 181C     		mov	r0, r3
  62 0016 FFF7FEFF 		bl	BitIoLdd2_SetVal
  67:../Sources/ProcessorExpert.c **** 	LEDgreen_Off();
  63              		.loc 1 67 0
  64 001a 2B4B     		ldr	r3, .L5
  65 001c DB68     		ldr	r3, [r3, #12]
  66 001e 181C     		mov	r0, r3
  67 0020 FFF7FEFF 		bl	BitIoLdd1_SetVal
  68:../Sources/ProcessorExpert.c **** 	// Inicjacja I2C
  69:../Sources/ProcessorExpert.c **** 	MyI2CPtr = I2C2_Init(NULL); //mma88453
  68              		.loc 1 69 0
  69 0024 0020     		mov	r0, #0
  70 0026 FFF7FEFF 		bl	I2C2_Init
  71 002a 021C     		mov	r2, r0
  72 002c 274B     		ldr	r3, .L5+4
  73 002e 1A60     		str	r2, [r3]
  70:../Sources/ProcessorExpert.c **** 	Myout_I2CPtr = out_I2C_Init(NULL); //LTC2945
  74              		.loc 1 70 0
  75 0030 0020     		mov	r0, #0
  76 0032 FFF7FEFF 		bl	out_I2C_Init
  77 0036 021C     		mov	r2, r0
  78 0038 254B     		ldr	r3, .L5+8
  79 003a 1A60     		str	r2, [r3]
  71:../Sources/ProcessorExpert.c **** 	// Inicjacja Timera (for I2C)
  72:../Sources/ProcessorExpert.c **** 	MyTimerPtr = TU1_Init(NULL);
  80              		.loc 1 72 0
  81 003c 0020     		mov	r0, #0
  82 003e FFF7FEFF 		bl	TU1_Init
  83 0042 021C     		mov	r2, r0
  84 0044 234B     		ldr	r3, .L5+12
  85 0046 1A60     		str	r2, [r3]
  73:../Sources/ProcessorExpert.c **** 
  74:../Sources/ProcessorExpert.c **** 
  75:../Sources/ProcessorExpert.c **** 	// Inicjacja Akcelerometru MMA855X
  76:../Sources/ProcessorExpert.c **** 	MMA845X_Init();
  86              		.loc 1 76 0
  87 0048 FFF7FEFF 		bl	MMA845X_Init
  77:../Sources/ProcessorExpert.c **** 	//LTC2945_Init();
  78:../Sources/ProcessorExpert.c **** 	AS5040_Init();
  88              		.loc 1 78 0
  89 004c FFF7FEFF 		bl	AS5040_Init
  90              	.L4:
  79:../Sources/ProcessorExpert.c **** 
  80:../Sources/ProcessorExpert.c **** 	for(;;)
  81:../Sources/ProcessorExpert.c **** 	{
  82:../Sources/ProcessorExpert.c **** 		//	  i++;
  83:../Sources/ProcessorExpert.c **** 		//	 WAIT1_WaitOSms(10);
  84:../Sources/ProcessorExpert.c **** 		//	 if(i%25==0)
  85:../Sources/ProcessorExpert.c **** 		//	 LEDgreen_Neg();
  86:../Sources/ProcessorExpert.c **** 		AS5040_data_parser();
  91              		.loc 1 86 0
  92 0050 FFF7FEFF 		bl	AS5040_data_parser
  87:../Sources/ProcessorExpert.c **** 		MMA845X_Poll();
  93              		.loc 1 87 0
  94 0054 FFF7FEFF 		bl	MMA845X_Poll
  88:../Sources/ProcessorExpert.c **** 		//LTC2945_Poll();
  89:../Sources/ProcessorExpert.c **** 
  90:../Sources/ProcessorExpert.c **** 
  91:../Sources/ProcessorExpert.c **** 		if(as5040data.Erorr){
  95              		.loc 1 91 0
  96 0058 1F4B     		ldr	r3, .L5+16
  97 005a 1B7A     		ldrb	r3, [r3, #8]
  98 005c 002B     		cmp	r3, #0
  99 005e 19D0     		beq	.L2
  92:../Sources/ProcessorExpert.c **** 			LEDgreen_Off();
 100              		.loc 1 92 0
 101 0060 194B     		ldr	r3, .L5
 102 0062 DB68     		ldr	r3, [r3, #12]
 103 0064 181C     		mov	r0, r3
 104 0066 FFF7FEFF 		bl	BitIoLdd1_SetVal
  93:../Sources/ProcessorExpert.c **** 			LEDred_On();
 105              		.loc 1 93 0
 106 006a 174B     		ldr	r3, .L5
 107 006c 1B69     		ldr	r3, [r3, #16]
 108 006e 181C     		mov	r0, r3
 109 0070 FFF7FEFF 		bl	BitIoLdd2_ClrVal
  94:../Sources/ProcessorExpert.c **** 			printf("tilt =  %d  ang_pos =ERORR current= %d", mma845x.y, ltc2945.current);
 110              		.loc 1 94 0
 111 0074 194B     		ldr	r3, .L5+20
 112 0076 5B88     		ldrh	r3, [r3, #2]
 113 0078 1AB2     		sxth	r2, r3
 114 007a 194B     		ldr	r3, .L5+24
 115 007c 1B88     		ldrh	r3, [r3]
 116 007e 1BB2     		sxth	r3, r3
 117 0080 1849     		ldr	r1, .L5+28
 118 0082 081C     		mov	r0, r1
 119 0084 111C     		mov	r1, r2
 120 0086 1A1C     		mov	r2, r3
 121 0088 FFF7FEFF 		bl	printf
  95:../Sources/ProcessorExpert.c **** 			printf("\n");
 122              		.loc 1 95 0
 123 008c 0A20     		mov	r0, #10
 124 008e FFF7FEFF 		bl	putchar
  96:../Sources/ProcessorExpert.c **** 		}
  97:../Sources/ProcessorExpert.c **** 		else{
  98:../Sources/ProcessorExpert.c **** 			LEDgreen_On();
  99:../Sources/ProcessorExpert.c **** 			LEDred_Off();
 100:../Sources/ProcessorExpert.c **** 			printf("tilt =  %d  ang_pos =  %d current= %d", mma845x.y, as5040data.ang_position, ltc2945.curr
 101:../Sources/ProcessorExpert.c **** 			printf("\n");
 102:../Sources/ProcessorExpert.c **** 		}
 103:../Sources/ProcessorExpert.c **** 
 104:../Sources/ProcessorExpert.c **** 
 105:../Sources/ProcessorExpert.c **** 	}
 125              		.loc 1 105 0
 126 0092 DDE7     		b	.L4
 127              	.L2:
  98:../Sources/ProcessorExpert.c **** 			LEDgreen_On();
 128              		.loc 1 98 0
 129 0094 0C4B     		ldr	r3, .L5
 130 0096 DB68     		ldr	r3, [r3, #12]
 131 0098 181C     		mov	r0, r3
 132 009a FFF7FEFF 		bl	BitIoLdd1_ClrVal
  99:../Sources/ProcessorExpert.c **** 			LEDred_Off();
 133              		.loc 1 99 0
 134 009e 0A4B     		ldr	r3, .L5
 135 00a0 1B69     		ldr	r3, [r3, #16]
 136 00a2 181C     		mov	r0, r3
 137 00a4 FFF7FEFF 		bl	BitIoLdd2_SetVal
 100:../Sources/ProcessorExpert.c **** 			printf("tilt =  %d  ang_pos =  %d current= %d", mma845x.y, as5040data.ang_position, ltc2945.curr
 138              		.loc 1 100 0
 139 00a8 0C4B     		ldr	r3, .L5+20
 140 00aa 5B88     		ldrh	r3, [r3, #2]
 141 00ac 19B2     		sxth	r1, r3
 142 00ae 0A4B     		ldr	r3, .L5+16
 143 00b0 1B88     		ldrh	r3, [r3]
 144 00b2 1AB2     		sxth	r2, r3
 145 00b4 0A4B     		ldr	r3, .L5+24
 146 00b6 1B88     		ldrh	r3, [r3]
 147 00b8 1BB2     		sxth	r3, r3
 148 00ba 0B48     		ldr	r0, .L5+32
 149 00bc FFF7FEFF 		bl	printf
 101:../Sources/ProcessorExpert.c **** 			printf("\n");
 150              		.loc 1 101 0
 151 00c0 0A20     		mov	r0, #10
 152 00c2 FFF7FEFF 		bl	putchar
 153              		.loc 1 105 0
 154 00c6 C3E7     		b	.L4
 155              	.L6:
 156              		.align	2
 157              	.L5:
 158 00c8 00000000 		.word	PE_LDD_DeviceDataList
 159 00cc 00000000 		.word	MyI2CPtr
 160 00d0 00000000 		.word	Myout_I2CPtr
 161 00d4 00000000 		.word	MyTimerPtr
 162 00d8 00000000 		.word	as5040data
 163 00dc 00000000 		.word	mma845x
 164 00e0 00000000 		.word	ltc2945
 165 00e4 00000000 		.word	.LC7
 166 00e8 28000000 		.word	.LC9
 167              		.cfi_endproc
 168              	.LFE0:
 170              		.text
 171              	.Letext0:
 172              		.file 2 "D:/CodeWarrior/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 173              		.file 3 "D:/PlikiI/Synergia/Jacht/workspace_yacht/I2C_1/Generated_Code/PE_Types.h"
 174              		.file 4 "../Sources/AS5040.h"
 175              		.file 5 "../Sources/mma8453.h"
 176              		.file 6 "../Sources/LTC2945.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ProcessorExpert.c
                            *COM*:00000006 InData
                            *COM*:00000002 mma845_tmp
                            *COM*:00000007 LtcInData
                            *COM*:00000004 MyI2CPtr
                            *COM*:00000004 MyTimerPtr
                            *COM*:00000004 Myout_I2CPtr
C:\Users\SKRA~1\AppData\Local\Temp\ccFoRiCs.s:24     .rodata:00000000 $d
C:\Users\SKRA~1\AppData\Local\Temp\ccFoRiCs.s:31     .text.main:00000000 $t
C:\Users\SKRA~1\AppData\Local\Temp\ccFoRiCs.s:36     .text.main:00000000 main
C:\Users\SKRA~1\AppData\Local\Temp\ccFoRiCs.s:158    .text.main:000000c8 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_low_level_init
BitIoLdd2_SetVal
BitIoLdd1_SetVal
I2C2_Init
out_I2C_Init
TU1_Init
MMA845X_Init
AS5040_Init
AS5040_data_parser
MMA845X_Poll
BitIoLdd2_ClrVal
printf
putchar
BitIoLdd1_ClrVal
PE_LDD_DeviceDataList
as5040data
mma845x
ltc2945
