   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ProcessorExpert.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	InData,6,4
  18              		.comm	mma845_tmp,2,2
  19              		.comm	MyI2CPtr,4,4
  20              		.comm	MyTimerPtr,4,4
  21              		.section	.rodata
  22              		.align	2
  23              	.LC5:
  24 0000 74696C74 		.ascii	"tilt =  %d  ang_pos =ERORR\000"
  24      203D2020 
  24      25642020 
  24      616E675F 
  24      706F7320 
  25 001b 00       		.align	2
  26              	.LC7:
  27 001c 74696C74 		.ascii	"tilt =  %d  ang_pos =  %d\000"
  27      203D2020 
  27      25642020 
  27      616E675F 
  27      706F7320 
  28 0036 0000     		.section	.text.main,"ax",%progbits
  29              		.align	2
  30              		.global	main
  31              		.code	16
  32              		.thumb_func
  34              	main:
  35              	.LFB0:
  36              		.file 1 "../Sources/ProcessorExpert.c"
   1:../Sources/ProcessorExpert.c **** /** ###################################################################
   2:../Sources/ProcessorExpert.c **** **     Filename    : ProcessorExpert.c
   3:../Sources/ProcessorExpert.c **** **     Project     : ProcessorExpert
   4:../Sources/ProcessorExpert.c **** **     Processor   : MKL25Z128VLK4
   5:../Sources/ProcessorExpert.c **** **     Version     : Driver 01.01
   6:../Sources/ProcessorExpert.c **** **     Compiler    : IAR ARM C Compiler
   7:../Sources/ProcessorExpert.c **** **     Date/Time   : 2012-08-27, 15:21, # CodeGen: 0
   8:../Sources/ProcessorExpert.c **** **     Abstract    :
   9:../Sources/ProcessorExpert.c **** **         Main module.
  10:../Sources/ProcessorExpert.c **** **         This module contains user's application code.
  11:../Sources/ProcessorExpert.c **** **     Settings    :
  12:../Sources/ProcessorExpert.c **** **     Contents    :
  13:../Sources/ProcessorExpert.c **** **         No public methods
  14:../Sources/ProcessorExpert.c **** **
  15:../Sources/ProcessorExpert.c **** ** ###################################################################*/
  16:../Sources/ProcessorExpert.c **** /* MODULE ProcessorExpert */
  17:../Sources/ProcessorExpert.c **** 
  18:../Sources/ProcessorExpert.c **** 
  19:../Sources/ProcessorExpert.c **** /* Including needed modules to compile this module/procedure */
  20:../Sources/ProcessorExpert.c **** #include "Cpu.h"
  21:../Sources/ProcessorExpert.c **** #include "Events.h"
  22:../Sources/ProcessorExpert.c **** #include "I2C2.h"
  23:../Sources/ProcessorExpert.c **** #include "IO1.h"
  24:../Sources/ProcessorExpert.c **** #include "WAIT1.h"
  25:../Sources/ProcessorExpert.c **** #include "LEDgreen.h"
  26:../Sources/ProcessorExpert.c **** #include "LEDpin1.h"
  27:../Sources/ProcessorExpert.c **** #include "BitIoLdd1.h"
  28:../Sources/ProcessorExpert.c **** #include "LEDred.h"
  29:../Sources/ProcessorExpert.c **** #include "LEDpin2.h"
  30:../Sources/ProcessorExpert.c **** #include "BitIoLdd2.h"
  31:../Sources/ProcessorExpert.c **** #include "TU1.h"
  32:../Sources/ProcessorExpert.c **** #include "CsIO1.h"
  33:../Sources/ProcessorExpert.c **** /* Including shared modules, which are used for whole project */
  34:../Sources/ProcessorExpert.c **** #include "PE_Types.h"
  35:../Sources/ProcessorExpert.c **** #include "PE_Error.h"
  36:../Sources/ProcessorExpert.c **** #include "PE_Const.h"
  37:../Sources/ProcessorExpert.c **** #include "IO_Map.h"
  38:../Sources/ProcessorExpert.c **** 
  39:../Sources/ProcessorExpert.c **** /* User includes (#include below this line is not maintained by Processor Expert) */
  40:../Sources/ProcessorExpert.c **** #include "stdio.h"
  41:../Sources/ProcessorExpert.c **** #include "AS5040.h"
  42:../Sources/ProcessorExpert.c **** #include "mma8453.h"
  43:../Sources/ProcessorExpert.c **** 
  44:../Sources/ProcessorExpert.c **** /* User includes (#include below this line is not maintained by Processor Expert) */
  45:../Sources/ProcessorExpert.c **** extern AS5040data as5040data;
  46:../Sources/ProcessorExpert.c **** extern MMA845X mma845x;
  47:../Sources/ProcessorExpert.c **** 
  48:../Sources/ProcessorExpert.c **** 
  49:../Sources/ProcessorExpert.c **** LDD_TDeviceData *MyI2CPtr;
  50:../Sources/ProcessorExpert.c **** LDD_TDeviceData *MyTimerPtr;
  51:../Sources/ProcessorExpert.c **** 
  52:../Sources/ProcessorExpert.c **** 
  53:../Sources/ProcessorExpert.c **** int main(void)
  54:../Sources/ProcessorExpert.c **** {
  37              		.loc 1 54 0
  38              		.cfi_startproc
  39 0000 80B5     		push	{r7, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 82B0     		sub	sp, sp, #8
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 16
  47 0004 00AF     		add	r7, sp, #0
  48              	.LCFI2:
  49              		.cfi_def_cfa_register 7
  55:../Sources/ProcessorExpert.c **** 	uint16_t i=0;
  50              		.loc 1 55 0
  51 0006 BB1D     		add	r3, r7, #6
  52 0008 0022     		mov	r2, #0
  53 000a 1A80     		strh	r2, [r3]
  56:../Sources/ProcessorExpert.c **** 
  57:../Sources/ProcessorExpert.c **** 	/*** Processor Expert internal initialization. DON'T REMOVE THIS CODE!!! ***/
  58:../Sources/ProcessorExpert.c **** 	PE_low_level_init();
  54              		.loc 1 58 0
  55 000c FFF7FEFF 		bl	PE_low_level_init
  59:../Sources/ProcessorExpert.c **** 	/*** End of Processor Expert internal initialization. 
  60:../Sources/ProcessorExpert.c **** 	 *                    ***/
  61:../Sources/ProcessorExpert.c **** 	LEDred_Off();
  56              		.loc 1 61 0
  57 0010 284B     		ldr	r3, .L5
  58 0012 1B69     		ldr	r3, [r3, #16]
  59 0014 181C     		mov	r0, r3
  60 0016 FFF7FEFF 		bl	BitIoLdd2_SetVal
  62:../Sources/ProcessorExpert.c **** 	LEDgreen_Off();
  61              		.loc 1 62 0
  62 001a 264B     		ldr	r3, .L5
  63 001c DB68     		ldr	r3, [r3, #12]
  64 001e 181C     		mov	r0, r3
  65 0020 FFF7FEFF 		bl	BitIoLdd1_SetVal
  63:../Sources/ProcessorExpert.c **** 	// Inicjacja I2C
  64:../Sources/ProcessorExpert.c **** 	MyI2CPtr = I2C2_Init(NULL);
  66              		.loc 1 64 0
  67 0024 0020     		mov	r0, #0
  68 0026 FFF7FEFF 		bl	I2C2_Init
  69 002a 021C     		mov	r2, r0
  70 002c 224B     		ldr	r3, .L5+4
  71 002e 1A60     		str	r2, [r3]
  65:../Sources/ProcessorExpert.c **** 	// Inicjacja Timera (for I2C)
  66:../Sources/ProcessorExpert.c **** 	MyTimerPtr = TU1_Init(NULL);
  72              		.loc 1 66 0
  73 0030 0020     		mov	r0, #0
  74 0032 FFF7FEFF 		bl	TU1_Init
  75 0036 021C     		mov	r2, r0
  76 0038 204B     		ldr	r3, .L5+8
  77 003a 1A60     		str	r2, [r3]
  67:../Sources/ProcessorExpert.c **** 
  68:../Sources/ProcessorExpert.c **** 
  69:../Sources/ProcessorExpert.c **** 	// Inicjacja Akcelerometru MMA855X
  70:../Sources/ProcessorExpert.c **** 	MMA845X_Init();
  78              		.loc 1 70 0
  79 003c FFF7FEFF 		bl	MMA845X_Init
  71:../Sources/ProcessorExpert.c **** 	AS5040_Init();
  80              		.loc 1 71 0
  81 0040 FFF7FEFF 		bl	AS5040_Init
  82              	.L4:
  72:../Sources/ProcessorExpert.c **** 
  73:../Sources/ProcessorExpert.c **** 	for(;;)
  74:../Sources/ProcessorExpert.c **** 	{
  75:../Sources/ProcessorExpert.c **** 		//	  i++;
  76:../Sources/ProcessorExpert.c **** 		//	 WAIT1_WaitOSms(10);
  77:../Sources/ProcessorExpert.c **** 		//	 if(i%25==0)
  78:../Sources/ProcessorExpert.c **** 		//	 LEDgreen_Neg();
  79:../Sources/ProcessorExpert.c **** 		AS5040_data_parser();
  83              		.loc 1 79 0
  84 0044 FFF7FEFF 		bl	AS5040_data_parser
  80:../Sources/ProcessorExpert.c **** 		MMA845X_Poll();
  85              		.loc 1 80 0
  86 0048 FFF7FEFF 		bl	MMA845X_Poll
  81:../Sources/ProcessorExpert.c **** 
  82:../Sources/ProcessorExpert.c **** 
  83:../Sources/ProcessorExpert.c **** 		if(as5040data.Erorr){
  87              		.loc 1 83 0
  88 004c 1C4B     		ldr	r3, .L5+12
  89 004e 1B7A     		ldrb	r3, [r3, #8]
  90 0050 002B     		cmp	r3, #0
  91 0052 15D0     		beq	.L2
  84:../Sources/ProcessorExpert.c **** 			LEDgreen_Off();
  92              		.loc 1 84 0
  93 0054 174B     		ldr	r3, .L5
  94 0056 DB68     		ldr	r3, [r3, #12]
  95 0058 181C     		mov	r0, r3
  96 005a FFF7FEFF 		bl	BitIoLdd1_SetVal
  85:../Sources/ProcessorExpert.c **** 			LEDred_On();
  97              		.loc 1 85 0
  98 005e 154B     		ldr	r3, .L5
  99 0060 1B69     		ldr	r3, [r3, #16]
 100 0062 181C     		mov	r0, r3
 101 0064 FFF7FEFF 		bl	BitIoLdd2_ClrVal
  86:../Sources/ProcessorExpert.c **** 			printf("tilt =  %d  ang_pos =ERORR", mma845x.y);
 102              		.loc 1 86 0
 103 0068 164B     		ldr	r3, .L5+16
 104 006a 5B88     		ldrh	r3, [r3, #2]
 105 006c 1BB2     		sxth	r3, r3
 106 006e 164A     		ldr	r2, .L5+20
 107 0070 101C     		mov	r0, r2
 108 0072 191C     		mov	r1, r3
 109 0074 FFF7FEFF 		bl	printf
  87:../Sources/ProcessorExpert.c **** 			printf("\n");
 110              		.loc 1 87 0
 111 0078 0A20     		mov	r0, #10
 112 007a FFF7FEFF 		bl	putchar
  88:../Sources/ProcessorExpert.c **** 		}
  89:../Sources/ProcessorExpert.c **** 		else{
  90:../Sources/ProcessorExpert.c **** 			LEDgreen_On();
  91:../Sources/ProcessorExpert.c **** 			LEDred_Off();
  92:../Sources/ProcessorExpert.c **** 			printf("tilt =  %d  ang_pos =  %d", mma845x.y, as5040data.ang_position);
  93:../Sources/ProcessorExpert.c **** 			printf("\n");
  94:../Sources/ProcessorExpert.c **** 		}
  95:../Sources/ProcessorExpert.c **** 
  96:../Sources/ProcessorExpert.c **** 
  97:../Sources/ProcessorExpert.c **** 	}
 113              		.loc 1 97 0
 114 007e E1E7     		b	.L4
 115              	.L2:
  90:../Sources/ProcessorExpert.c **** 			LEDgreen_On();
 116              		.loc 1 90 0
 117 0080 0C4B     		ldr	r3, .L5
 118 0082 DB68     		ldr	r3, [r3, #12]
 119 0084 181C     		mov	r0, r3
 120 0086 FFF7FEFF 		bl	BitIoLdd1_ClrVal
  91:../Sources/ProcessorExpert.c **** 			LEDred_Off();
 121              		.loc 1 91 0
 122 008a 0A4B     		ldr	r3, .L5
 123 008c 1B69     		ldr	r3, [r3, #16]
 124 008e 181C     		mov	r0, r3
 125 0090 FFF7FEFF 		bl	BitIoLdd2_SetVal
  92:../Sources/ProcessorExpert.c **** 			printf("tilt =  %d  ang_pos =  %d", mma845x.y, as5040data.ang_position);
 126              		.loc 1 92 0
 127 0094 0B4B     		ldr	r3, .L5+16
 128 0096 5B88     		ldrh	r3, [r3, #2]
 129 0098 1AB2     		sxth	r2, r3
 130 009a 094B     		ldr	r3, .L5+12
 131 009c 1B88     		ldrh	r3, [r3]
 132 009e 1BB2     		sxth	r3, r3
 133 00a0 0A49     		ldr	r1, .L5+24
 134 00a2 081C     		mov	r0, r1
 135 00a4 111C     		mov	r1, r2
 136 00a6 1A1C     		mov	r2, r3
 137 00a8 FFF7FEFF 		bl	printf
  93:../Sources/ProcessorExpert.c **** 			printf("\n");
 138              		.loc 1 93 0
 139 00ac 0A20     		mov	r0, #10
 140 00ae FFF7FEFF 		bl	putchar
 141              		.loc 1 97 0
 142 00b2 C7E7     		b	.L4
 143              	.L6:
 144              		.align	2
 145              	.L5:
 146 00b4 00000000 		.word	PE_LDD_DeviceDataList
 147 00b8 00000000 		.word	MyI2CPtr
 148 00bc 00000000 		.word	MyTimerPtr
 149 00c0 00000000 		.word	as5040data
 150 00c4 00000000 		.word	mma845x
 151 00c8 00000000 		.word	.LC5
 152 00cc 1C000000 		.word	.LC7
 153              		.cfi_endproc
 154              	.LFE0:
 156              		.text
 157              	.Letext0:
 158              		.file 2 "D:/CodeWarrior/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 159              		.file 3 "D:/PlikiI/Synergia/Jacht/workspace_yacht/I2C_1/Generated_Code/PE_Types.h"
 160              		.file 4 "../Sources/AS5040.h"
 161              		.file 5 "../Sources/mma8453.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ProcessorExpert.c
                            *COM*:00000006 InData
                            *COM*:00000002 mma845_tmp
                            *COM*:00000004 MyI2CPtr
                            *COM*:00000004 MyTimerPtr
C:\Users\SKRA~1\AppData\Local\Temp\ccINlcuz.s:22     .rodata:00000000 $d
C:\Users\SKRA~1\AppData\Local\Temp\ccINlcuz.s:29     .text.main:00000000 $t
C:\Users\SKRA~1\AppData\Local\Temp\ccINlcuz.s:34     .text.main:00000000 main
C:\Users\SKRA~1\AppData\Local\Temp\ccINlcuz.s:146    .text.main:000000b4 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_low_level_init
BitIoLdd2_SetVal
BitIoLdd1_SetVal
I2C2_Init
TU1_Init
MMA845X_Init
AS5040_Init
AS5040_data_parser
MMA845X_Poll
BitIoLdd2_ClrVal
printf
putchar
BitIoLdd1_ClrVal
PE_LDD_DeviceDataList
as5040data
mma845x
