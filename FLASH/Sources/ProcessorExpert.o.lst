   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ProcessorExpert.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	InData,6,4
  18              		.comm	mma845_tmp,2,2
  19              		.comm	LtcInData,7,4
  20              		.comm	MyI2CPtr,4,4
  21              		.comm	MyTimerPtr,4,4
  22              		.comm	Myout_I2CPtr,4,4
  23              		.section	.bss.ADC_value,"aw",%nobits
  24              		.align	2
  27              	ADC_value:
  28 0000 00000000 		.space	4
  29              		.comm	ADC_koniec,1,1
  30              		.comm	Voltage,4,4
  31              		.comm	Current,4,4
  32              		.comm	Power,4,4
  33              		.comm	volt,4,4
  34              		.comm	powe,4,4
  35              		.comm	curr,4,4
  36              		.section	.rodata
  37              		.align	2
  38              	.LC6:
  39 0000 25642C25 		.ascii	"%d,%d \012\000"
  39      64200A00 
  40              		.section	.text.main,"ax",%progbits
  41              		.align	2
  42              		.global	main
  43              		.code	16
  44              		.thumb_func
  46              	main:
  47              	.LFB0:
  48              		.file 1 "../Sources/ProcessorExpert.c"
   1:../Sources/ProcessorExpert.c **** /** ###################################################################
   2:../Sources/ProcessorExpert.c **** **     Filename    : ProcessorExpert.c
   3:../Sources/ProcessorExpert.c **** **     Project     : ProcessorExpert
   4:../Sources/ProcessorExpert.c **** **     Processor   : MKL25Z128VLK4
   5:../Sources/ProcessorExpert.c **** **     Version     : Driver 01.01
   6:../Sources/ProcessorExpert.c **** **     Compiler    : IAR ARM C Compiler
   7:../Sources/ProcessorExpert.c **** **     Date/Time   : 2012-08-27, 15:21, # CodeGen: 0
   8:../Sources/ProcessorExpert.c **** **     Abstract    :
   9:../Sources/ProcessorExpert.c **** **         Main module.
  10:../Sources/ProcessorExpert.c **** **         This module contains user's application code.
  11:../Sources/ProcessorExpert.c **** **     Settings    :
  12:../Sources/ProcessorExpert.c **** **     Contents    :
  13:../Sources/ProcessorExpert.c **** **         No public methods
  14:../Sources/ProcessorExpert.c **** **
  15:../Sources/ProcessorExpert.c **** ** ###################################################################*/
  16:../Sources/ProcessorExpert.c **** /* MODULE ProcessorExpert */
  17:../Sources/ProcessorExpert.c **** 
  18:../Sources/ProcessorExpert.c **** 
  19:../Sources/ProcessorExpert.c **** /* Including needed modules to compile this module/procedure */
  20:../Sources/ProcessorExpert.c **** #include "Cpu.h"
  21:../Sources/ProcessorExpert.c **** #include "Events.h"
  22:../Sources/ProcessorExpert.c **** #include "I2C2.h"
  23:../Sources/ProcessorExpert.c **** #include "out_I2C.h"
  24:../Sources/ProcessorExpert.c **** #include "AD1.h"
  25:../Sources/ProcessorExpert.c **** #include "AdcLdd1.h"
  26:../Sources/ProcessorExpert.c **** #include "IO1.h"
  27:../Sources/ProcessorExpert.c **** #include "WAIT1.h"
  28:../Sources/ProcessorExpert.c **** #include "LEDgreen.h"
  29:../Sources/ProcessorExpert.c **** #include "LEDpin1.h"
  30:../Sources/ProcessorExpert.c **** #include "BitIoLdd1.h"
  31:../Sources/ProcessorExpert.c **** #include "LEDred.h"
  32:../Sources/ProcessorExpert.c **** #include "LEDpin2.h"
  33:../Sources/ProcessorExpert.c **** #include "BitIoLdd2.h"
  34:../Sources/ProcessorExpert.c **** #include "out_I2C.h"
  35:../Sources/ProcessorExpert.c **** #include "TU1.h"
  36:../Sources/ProcessorExpert.c **** #include "CsIO1.h"
  37:../Sources/ProcessorExpert.c **** /* Including shared modules, which are used for whole project */
  38:../Sources/ProcessorExpert.c **** #include "PE_Types.h"
  39:../Sources/ProcessorExpert.c **** #include "PE_Error.h"
  40:../Sources/ProcessorExpert.c **** #include "PE_Const.h"
  41:../Sources/ProcessorExpert.c **** #include "IO_Map.h"
  42:../Sources/ProcessorExpert.c **** 
  43:../Sources/ProcessorExpert.c **** /* User includes (#include below this line is not maintained by Processor Expert) */
  44:../Sources/ProcessorExpert.c **** #include "stdio.h"
  45:../Sources/ProcessorExpert.c **** #include "AS5040.h"
  46:../Sources/ProcessorExpert.c **** #include "mma8453.h"
  47:../Sources/ProcessorExpert.c **** #include "LTC2945.h"
  48:../Sources/ProcessorExpert.c **** #include "adc_data.h"
  49:../Sources/ProcessorExpert.c **** 
  50:../Sources/ProcessorExpert.c **** /* User includes (#include below this line is not maintained by Processor Expert) */
  51:../Sources/ProcessorExpert.c **** extern AS5040data as5040data;
  52:../Sources/ProcessorExpert.c **** extern MMA845X mma845x;
  53:../Sources/ProcessorExpert.c **** extern LTC2945 ltc2945;
  54:../Sources/ProcessorExpert.c **** 
  55:../Sources/ProcessorExpert.c **** 
  56:../Sources/ProcessorExpert.c **** LDD_TDeviceData *MyI2CPtr;
  57:../Sources/ProcessorExpert.c **** LDD_TDeviceData *MyTimerPtr;
  58:../Sources/ProcessorExpert.c **** LDD_TDeviceData *Myout_I2CPtr;
  59:../Sources/ProcessorExpert.c **** 
  60:../Sources/ProcessorExpert.c **** 
  61:../Sources/ProcessorExpert.c **** 
  62:../Sources/ProcessorExpert.c **** static uint16_t ADC_value[AD1_CHANNEL_COUNT];
  63:../Sources/ProcessorExpert.c **** volatile bool ADC_koniec;
  64:../Sources/ProcessorExpert.c **** float Voltage;
  65:../Sources/ProcessorExpert.c **** float Current;
  66:../Sources/ProcessorExpert.c **** float Power;
  67:../Sources/ProcessorExpert.c **** 
  68:../Sources/ProcessorExpert.c **** int volt;
  69:../Sources/ProcessorExpert.c **** int powe;
  70:../Sources/ProcessorExpert.c **** int curr;
  71:../Sources/ProcessorExpert.c **** 
  72:../Sources/ProcessorExpert.c **** int main(void)
  73:../Sources/ProcessorExpert.c **** {
  49              		.loc 1 73 0
  50              		.cfi_startproc
  51 0000 80B5     		push	{r7, lr}
  52              	.LCFI0:
  53              		.cfi_def_cfa_offset 8
  54              		.cfi_offset 7, -8
  55              		.cfi_offset 14, -4
  56 0002 00AF     		add	r7, sp, #0
  57              	.LCFI1:
  58              		.cfi_def_cfa_register 7
  74:../Sources/ProcessorExpert.c **** 
  75:../Sources/ProcessorExpert.c **** 	/*** Processor Expert internal initialization. DON'T REMOVE THIS CODE!!! ***/
  76:../Sources/ProcessorExpert.c **** 	PE_low_level_init();
  59              		.loc 1 76 0
  60 0004 FFF7FEFF 		bl	PE_low_level_init
  77:../Sources/ProcessorExpert.c **** 	/*** End of Processor Expert internal initialization. 
  78:../Sources/ProcessorExpert.c **** 	 *                    ***/
  79:../Sources/ProcessorExpert.c **** 	LEDred_Off();
  61              		.loc 1 79 0
  62 0008 2E4B     		ldr	r3, .L5
  63 000a 1B69     		ldr	r3, [r3, #16]
  64 000c 181C     		mov	r0, r3
  65 000e FFF7FEFF 		bl	BitIoLdd2_SetVal
  80:../Sources/ProcessorExpert.c **** 	LEDgreen_Off();
  66              		.loc 1 80 0
  67 0012 2C4B     		ldr	r3, .L5
  68 0014 DB68     		ldr	r3, [r3, #12]
  69 0016 181C     		mov	r0, r3
  70 0018 FFF7FEFF 		bl	BitIoLdd1_SetVal
  81:../Sources/ProcessorExpert.c **** 	// Inicjacja I2C
  82:../Sources/ProcessorExpert.c **** 	MyI2CPtr = I2C2_Init(NULL); //mma88453
  71              		.loc 1 82 0
  72 001c 0020     		mov	r0, #0
  73 001e FFF7FEFF 		bl	I2C2_Init
  74 0022 021C     		mov	r2, r0
  75 0024 284B     		ldr	r3, .L5+4
  76 0026 1A60     		str	r2, [r3]
  83:../Sources/ProcessorExpert.c **** 	Myout_I2CPtr = out_I2C_Init(NULL); //LTC2945
  77              		.loc 1 83 0
  78 0028 0020     		mov	r0, #0
  79 002a FFF7FEFF 		bl	out_I2C_Init
  80 002e 021C     		mov	r2, r0
  81 0030 264B     		ldr	r3, .L5+8
  82 0032 1A60     		str	r2, [r3]
  84:../Sources/ProcessorExpert.c **** 	// Inicjacja Timera (for I2C)
  85:../Sources/ProcessorExpert.c **** 	MyTimerPtr = TU1_Init(NULL);
  83              		.loc 1 85 0
  84 0034 0020     		mov	r0, #0
  85 0036 FFF7FEFF 		bl	TU1_Init
  86 003a 021C     		mov	r2, r0
  87 003c 244B     		ldr	r3, .L5+12
  88 003e 1A60     		str	r2, [r3]
  86:../Sources/ProcessorExpert.c **** 
  87:../Sources/ProcessorExpert.c **** 
  88:../Sources/ProcessorExpert.c **** 	// Inicjacja Akcelerometru MMA855X
  89:../Sources/ProcessorExpert.c **** 	MMA845X_Init();
  89              		.loc 1 89 0
  90 0040 FFF7FEFF 		bl	MMA845X_Init
  90:../Sources/ProcessorExpert.c **** 	//LTC2945_Init();
  91:../Sources/ProcessorExpert.c **** 	AS5040_Init();
  91              		.loc 1 91 0
  92 0044 FFF7FEFF 		bl	AS5040_Init
  92:../Sources/ProcessorExpert.c **** 	(void)AD1_Measure(TRUE);
  93              		.loc 1 92 0
  94 0048 0120     		mov	r0, #1
  95 004a FFF7FEFF 		bl	AD1_Measure
  96              	.L4:
  93:../Sources/ProcessorExpert.c **** 	
  94:../Sources/ProcessorExpert.c **** 
  95:../Sources/ProcessorExpert.c **** 	for(;;)
  96:../Sources/ProcessorExpert.c **** 	{
  97:../Sources/ProcessorExpert.c **** 
  98:../Sources/ProcessorExpert.c **** 		AS5040_data_parser();
  97              		.loc 1 98 0
  98 004e FFF7FEFF 		bl	AS5040_data_parser
  99:../Sources/ProcessorExpert.c **** 		MMA845X_Poll();
  99              		.loc 1 99 0
 100 0052 FFF7FEFF 		bl	MMA845X_Poll
 100:../Sources/ProcessorExpert.c **** 		//LTC2945_Poll();
 101:../Sources/ProcessorExpert.c **** //		if (ADC_koniec){
 102:../Sources/ProcessorExpert.c **** //		(void)AD1_GetValue16(&ADC_value[0]);
 103:../Sources/ProcessorExpert.c **** //		ADC_koniec=FALSE;
 104:../Sources/ProcessorExpert.c **** //		(void)AD1_Measure(TRUE);
 105:../Sources/ProcessorExpert.c **** //		}
 106:../Sources/ProcessorExpert.c **** 		
 107:../Sources/ProcessorExpert.c **** 		
 108:../Sources/ProcessorExpert.c **** //		Voltage=vlotage_scaling(ADC_value[1]);
 109:../Sources/ProcessorExpert.c **** //		Current=copm_current(vlotage_scaling(ADC_value[0]),Voltage);
 110:../Sources/ProcessorExpert.c **** //		Power=copm_current(Current,Voltage);
 111:../Sources/ProcessorExpert.c **** //		
 112:../Sources/ProcessorExpert.c **** //		volt=Voltage*1000;
 113:../Sources/ProcessorExpert.c **** //		curr=Current*1000;
 114:../Sources/ProcessorExpert.c **** //		powe=Power*1000;
 115:../Sources/ProcessorExpert.c **** 		
 116:../Sources/ProcessorExpert.c **** 
 117:../Sources/ProcessorExpert.c **** 		if(as5040data.Erorr){
 101              		.loc 1 117 0
 102 0056 1F4B     		ldr	r3, .L5+16
 103 0058 1B7A     		ldrb	r3, [r3, #8]
 104 005a 002B     		cmp	r3, #0
 105 005c 17D0     		beq	.L2
 118:../Sources/ProcessorExpert.c **** 			LEDgreen_Off();
 106              		.loc 1 118 0
 107 005e 194B     		ldr	r3, .L5
 108 0060 DB68     		ldr	r3, [r3, #12]
 109 0062 181C     		mov	r0, r3
 110 0064 FFF7FEFF 		bl	BitIoLdd1_SetVal
 119:../Sources/ProcessorExpert.c **** 			LEDred_On();
 111              		.loc 1 119 0
 112 0068 164B     		ldr	r3, .L5
 113 006a 1B69     		ldr	r3, [r3, #16]
 114 006c 181C     		mov	r0, r3
 115 006e FFF7FEFF 		bl	BitIoLdd2_ClrVal
 120:../Sources/ProcessorExpert.c **** 			printf("%d,%d \n", 0xffff,mma845x.y);
 116              		.loc 1 120 0
 117 0072 194B     		ldr	r3, .L5+20
 118 0074 5B88     		ldrh	r3, [r3, #2]
 119 0076 1BB2     		sxth	r3, r3
 120 0078 1849     		ldr	r1, .L5+24
 121 007a 194A     		ldr	r2, .L5+28
 122 007c 081C     		mov	r0, r1
 123 007e 111C     		mov	r1, r2
 124 0080 1A1C     		mov	r2, r3
 125 0082 FFF7FEFF 		bl	printf
 121:../Sources/ProcessorExpert.c **** 			printf("\n");
 126              		.loc 1 121 0
 127 0086 0A20     		mov	r0, #10
 128 0088 FFF7FEFF 		bl	putchar
 122:../Sources/ProcessorExpert.c **** 		}
 123:../Sources/ProcessorExpert.c **** 		else{
 124:../Sources/ProcessorExpert.c **** 			LEDgreen_On();
 125:../Sources/ProcessorExpert.c **** 			LEDred_Off();
 126:../Sources/ProcessorExpert.c **** 			printf("%d,%d \n", as5040data.ang_position,mma845x.y);
 127:../Sources/ProcessorExpert.c **** 			printf("\n");
 128:../Sources/ProcessorExpert.c **** 		}
 129:../Sources/ProcessorExpert.c **** 
 130:../Sources/ProcessorExpert.c **** 
 131:../Sources/ProcessorExpert.c **** 	}
 129              		.loc 1 131 0
 130 008c DFE7     		b	.L4
 131              	.L2:
 124:../Sources/ProcessorExpert.c **** 			LEDgreen_On();
 132              		.loc 1 124 0
 133 008e 0D4B     		ldr	r3, .L5
 134 0090 DB68     		ldr	r3, [r3, #12]
 135 0092 181C     		mov	r0, r3
 136 0094 FFF7FEFF 		bl	BitIoLdd1_ClrVal
 125:../Sources/ProcessorExpert.c **** 			LEDred_Off();
 137              		.loc 1 125 0
 138 0098 0A4B     		ldr	r3, .L5
 139 009a 1B69     		ldr	r3, [r3, #16]
 140 009c 181C     		mov	r0, r3
 141 009e FFF7FEFF 		bl	BitIoLdd2_SetVal
 126:../Sources/ProcessorExpert.c **** 			printf("%d,%d \n", as5040data.ang_position,mma845x.y);
 142              		.loc 1 126 0
 143 00a2 0C4B     		ldr	r3, .L5+16
 144 00a4 1B88     		ldrh	r3, [r3]
 145 00a6 1AB2     		sxth	r2, r3
 146 00a8 0B4B     		ldr	r3, .L5+20
 147 00aa 5B88     		ldrh	r3, [r3, #2]
 148 00ac 1BB2     		sxth	r3, r3
 149 00ae 0B49     		ldr	r1, .L5+24
 150 00b0 081C     		mov	r0, r1
 151 00b2 111C     		mov	r1, r2
 152 00b4 1A1C     		mov	r2, r3
 153 00b6 FFF7FEFF 		bl	printf
 127:../Sources/ProcessorExpert.c **** 			printf("\n");
 154              		.loc 1 127 0
 155 00ba 0A20     		mov	r0, #10
 156 00bc FFF7FEFF 		bl	putchar
 157              		.loc 1 131 0
 158 00c0 C5E7     		b	.L4
 159              	.L6:
 160 00c2 C046     		.align	2
 161              	.L5:
 162 00c4 00000000 		.word	PE_LDD_DeviceDataList
 163 00c8 00000000 		.word	MyI2CPtr
 164 00cc 00000000 		.word	Myout_I2CPtr
 165 00d0 00000000 		.word	MyTimerPtr
 166 00d4 00000000 		.word	as5040data
 167 00d8 00000000 		.word	mma845x
 168 00dc 00000000 		.word	.LC6
 169 00e0 FFFF0000 		.word	65535
 170              		.cfi_endproc
 171              	.LFE0:
 173              		.text
 174              	.Letext0:
 175              		.file 2 "D:/CodeWarrior/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 176              		.file 3 "D:/PlikiI/Synergia/Jacht/workspace_yacht/I2C_1/Generated_Code/PE_Types.h"
 177              		.file 4 "../Sources/AS5040.h"
 178              		.file 5 "../Sources/mma8453.h"
 179              		.file 6 "../Sources/LTC2945.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ProcessorExpert.c
                            *COM*:00000006 InData
                            *COM*:00000002 mma845_tmp
                            *COM*:00000007 LtcInData
                            *COM*:00000004 MyI2CPtr
                            *COM*:00000004 MyTimerPtr
                            *COM*:00000004 Myout_I2CPtr
C:\Users\SKRA~1\AppData\Local\Temp\cc4irwxQ.s:24     .bss.ADC_value:00000000 $d
C:\Users\SKRA~1\AppData\Local\Temp\cc4irwxQ.s:27     .bss.ADC_value:00000000 ADC_value
                            *COM*:00000001 ADC_koniec
                            *COM*:00000004 Voltage
                            *COM*:00000004 Current
                            *COM*:00000004 Power
                            *COM*:00000004 volt
                            *COM*:00000004 powe
                            *COM*:00000004 curr
C:\Users\SKRA~1\AppData\Local\Temp\cc4irwxQ.s:37     .rodata:00000000 $d
C:\Users\SKRA~1\AppData\Local\Temp\cc4irwxQ.s:41     .text.main:00000000 $t
C:\Users\SKRA~1\AppData\Local\Temp\cc4irwxQ.s:46     .text.main:00000000 main
C:\Users\SKRA~1\AppData\Local\Temp\cc4irwxQ.s:162    .text.main:000000c4 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_low_level_init
BitIoLdd2_SetVal
BitIoLdd1_SetVal
I2C2_Init
out_I2C_Init
TU1_Init
MMA845X_Init
AS5040_Init
AD1_Measure
AS5040_data_parser
MMA845X_Poll
BitIoLdd2_ClrVal
printf
putchar
BitIoLdd1_ClrVal
PE_LDD_DeviceDataList
as5040data
mma845x
