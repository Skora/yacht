   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"mma8453.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	DataReceivedFlg,1,1
  18              		.comm	DataTransmittedFlg,1,1
  19              		.comm	OutData,2,4
  20              		.comm	InData,6,4
  21              		.comm	mma845_tmp,2,2
  22              		.comm	mma845x,8,4
  23              		.comm	Error,2,2
  24              		.comm	MyI2CPtr,4,4
  25              		.comm	MyTimerPtr,4,4
  26              		.comm	measuring,1,1
  27              		.comm	measuring_last,1,1
  28              		.section	.text.Timer_Interrupt_CB,"ax",%progbits
  29              		.align	2
  30              		.global	Timer_Interrupt_CB
  31              		.code	16
  32              		.thumb_func
  34              	Timer_Interrupt_CB:
  35              	.LFB0:
  36              		.file 1 "../Sources/mma8453.c"
   1:../Sources/mma8453.c **** 
   2:../Sources/mma8453.c **** #include "mma8453.h"
   3:../Sources/mma8453.c **** 
   4:../Sources/mma8453.c **** MMA845X mma845x;
   5:../Sources/mma8453.c **** LDD_TError Error;
   6:../Sources/mma8453.c **** 
   7:../Sources/mma8453.c **** LDD_TDeviceData *MyI2CPtr;
   8:../Sources/mma8453.c **** LDD_TDeviceData *MyTimerPtr;
   9:../Sources/mma8453.c **** 
  10:../Sources/mma8453.c **** 
  11:../Sources/mma8453.c **** MMA845_STATE measuring;
  12:../Sources/mma8453.c **** MMA845_STATE measuring_last;
  13:../Sources/mma8453.c **** 
  14:../Sources/mma8453.c **** 
  15:../Sources/mma8453.c **** /**************************************************************************//*!
  16:../Sources/mma8453.c **** * Funkcja obs³uga przerwania Timera
  17:../Sources/mma8453.c **** ******************************************************************************/
  18:../Sources/mma8453.c **** void Timer_Interrupt_CB(void)
  19:../Sources/mma8453.c **** {
  37              		.loc 1 19 0
  38              		.cfi_startproc
  39 0000 80B5     		push	{r7, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 00AF     		add	r7, sp, #0
  45              	.LCFI1:
  46              		.cfi_def_cfa_register 7
  20:../Sources/mma8453.c ****   if(measuring == IDLE)
  47              		.loc 1 20 0
  48 0004 0A4B     		ldr	r3, .L4
  49 0006 1B78     		ldrb	r3, [r3]
  50 0008 002B     		cmp	r3, #0
  51 000a 0ED1     		bne	.L1
  21:../Sources/mma8453.c ****   {
  22:../Sources/mma8453.c ****     if(measuring_last == TRANSMIT)
  52              		.loc 1 22 0
  53 000c 094B     		ldr	r3, .L4+4
  54 000e 1B78     		ldrb	r3, [r3]
  55 0010 012B     		cmp	r3, #1
  56 0012 03D1     		bne	.L3
  23:../Sources/mma8453.c ****       measuring = RECEIVE; 
  57              		.loc 1 23 0
  58 0014 064B     		ldr	r3, .L4
  59 0016 0222     		mov	r2, #2
  60 0018 1A70     		strb	r2, [r3]
  61 001a 06E0     		b	.L1
  62              	.L3:
  24:../Sources/mma8453.c ****     else if(measuring_last == RECEIVE)
  63              		.loc 1 24 0
  64 001c 054B     		ldr	r3, .L4+4
  65 001e 1B78     		ldrb	r3, [r3]
  66 0020 022B     		cmp	r3, #2
  67 0022 02D1     		bne	.L1
  25:../Sources/mma8453.c ****       measuring = TRANSMIT;
  68              		.loc 1 25 0
  69 0024 024B     		ldr	r3, .L4
  70 0026 0122     		mov	r2, #1
  71 0028 1A70     		strb	r2, [r3]
  72              	.L1:
  26:../Sources/mma8453.c ****   }
  27:../Sources/mma8453.c **** }
  73              		.loc 1 27 0
  74 002a BD46     		mov	sp, r7
  75              		@ sp needed for prologue
  76 002c 80BD     		pop	{r7, pc}
  77              	.L5:
  78 002e C046     		.align	2
  79              	.L4:
  80 0030 00000000 		.word	measuring
  81 0034 00000000 		.word	measuring_last
  82              		.cfi_endproc
  83              	.LFE0:
  85              		.section	.text.MMA845X_Init,"ax",%progbits
  86              		.align	2
  87              		.global	MMA845X_Init
  88              		.code	16
  89              		.thumb_func
  91              	MMA845X_Init:
  92              	.LFB1:
  28:../Sources/mma8453.c **** 
  29:../Sources/mma8453.c **** /*****************************************************************************
  30:../Sources/mma8453.c **** * Inicjacja I2C dla  MMA845x
  31:../Sources/mma8453.c **** ******************************************************************************/
  32:../Sources/mma8453.c **** void MMA845X_Init(void)
  33:../Sources/mma8453.c **** {
  93              		.loc 1 33 0
  94              		.cfi_startproc
  95 0000 80B5     		push	{r7, lr}
  96              	.LCFI2:
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 7, -8
  99              		.cfi_offset 14, -4
 100 0002 00AF     		add	r7, sp, #0
 101              	.LCFI3:
 102              		.cfi_def_cfa_register 7
  34:../Sources/mma8453.c **** 
  35:../Sources/mma8453.c ****   /* Configure I2C BUS device(e.g. RTC) - Write Operation */
  36:../Sources/mma8453.c ****   Error = I2C2_MasterSendBlock(MyI2CPtr, &OutData, 2, LDD_I2C_NO_SEND_STOP); /* Send OutData (4 byt
 103              		.loc 1 36 0
 104 0004 234B     		ldr	r3, .L10
 105 0006 1A68     		ldr	r2, [r3]
 106 0008 234B     		ldr	r3, .L10+4
 107 000a 101C     		mov	r0, r2
 108 000c 191C     		mov	r1, r3
 109 000e 0222     		mov	r2, #2
 110 0010 0023     		mov	r3, #0
 111 0012 FFF7FEFF 		bl	I2C2_MasterSendBlock
 112 0016 031C     		mov	r3, r0
 113 0018 1A1C     		mov	r2, r3
 114 001a 204B     		ldr	r3, .L10+8
 115 001c 1A80     		strh	r2, [r3]
  37:../Sources/mma8453.c ****   while (!DataTransmittedFlg); 
 116              		.loc 1 37 0
 117 001e C046     		mov	r8, r8
 118              	.L7:
 119              		.loc 1 37 0 is_stmt 0
 120 0020 1F4B     		ldr	r3, .L10+12
 121 0022 1B78     		ldrb	r3, [r3]
 122 0024 DBB2     		uxtb	r3, r3
 123 0026 002B     		cmp	r3, #0
 124 0028 FAD0     		beq	.L7
  38:../Sources/mma8453.c ****   DataTransmittedFlg = FALSE;
 125              		.loc 1 38 0 is_stmt 1
 126 002a 1D4B     		ldr	r3, .L10+12
 127 002c 0022     		mov	r2, #0
 128 002e 1A70     		strb	r2, [r3]
  39:../Sources/mma8453.c ****   
  40:../Sources/mma8453.c ****   OutData[0] = MMA845X_DEVICE_ID; 
 129              		.loc 1 40 0
 130 0030 194B     		ldr	r3, .L10+4
 131 0032 0D22     		mov	r2, #13
 132 0034 1A70     		strb	r2, [r3]
  41:../Sources/mma8453.c **** 
  42:../Sources/mma8453.c ****   Error = I2C2_MasterSendBlock(MyI2CPtr, &OutData, 1, LDD_I2C_NO_SEND_STOP);
 133              		.loc 1 42 0
 134 0036 174B     		ldr	r3, .L10
 135 0038 1A68     		ldr	r2, [r3]
 136 003a 174B     		ldr	r3, .L10+4
 137 003c 101C     		mov	r0, r2
 138 003e 191C     		mov	r1, r3
 139 0040 0122     		mov	r2, #1
 140 0042 0023     		mov	r3, #0
 141 0044 FFF7FEFF 		bl	I2C2_MasterSendBlock
 142 0048 031C     		mov	r3, r0
 143 004a 1A1C     		mov	r2, r3
 144 004c 134B     		ldr	r3, .L10+8
 145 004e 1A80     		strh	r2, [r3]
  43:../Sources/mma8453.c ****   while (!DataTransmittedFlg);  
 146              		.loc 1 43 0
 147 0050 C046     		mov	r8, r8
 148              	.L8:
 149              		.loc 1 43 0 is_stmt 0
 150 0052 134B     		ldr	r3, .L10+12
 151 0054 1B78     		ldrb	r3, [r3]
 152 0056 DBB2     		uxtb	r3, r3
 153 0058 002B     		cmp	r3, #0
 154 005a FAD0     		beq	.L8
  44:../Sources/mma8453.c ****   DataTransmittedFlg = FALSE;
 155              		.loc 1 44 0 is_stmt 1
 156 005c 104B     		ldr	r3, .L10+12
 157 005e 0022     		mov	r2, #0
 158 0060 1A70     		strb	r2, [r3]
  45:../Sources/mma8453.c ****   
  46:../Sources/mma8453.c ****   Error = I2C2_MasterReceiveBlock(MyI2CPtr, &mma845x.id, 1, LDD_I2C_SEND_STOP);
 159              		.loc 1 46 0
 160 0062 0C4B     		ldr	r3, .L10
 161 0064 1A68     		ldr	r2, [r3]
 162 0066 0F4B     		ldr	r3, .L10+16
 163 0068 101C     		mov	r0, r2
 164 006a 191C     		mov	r1, r3
 165 006c 0122     		mov	r2, #1
 166 006e 0123     		mov	r3, #1
 167 0070 FFF7FEFF 		bl	I2C2_MasterReceiveBlock
 168 0074 031C     		mov	r3, r0
 169 0076 1A1C     		mov	r2, r3
 170 0078 084B     		ldr	r3, .L10+8
 171 007a 1A80     		strh	r2, [r3]
  47:../Sources/mma8453.c ****   while (!DataReceivedFlg);
 172              		.loc 1 47 0
 173 007c C046     		mov	r8, r8
 174              	.L9:
 175              		.loc 1 47 0 is_stmt 0
 176 007e 0A4B     		ldr	r3, .L10+20
 177 0080 1B78     		ldrb	r3, [r3]
 178 0082 DBB2     		uxtb	r3, r3
 179 0084 002B     		cmp	r3, #0
 180 0086 FAD0     		beq	.L9
  48:../Sources/mma8453.c ****   DataReceivedFlg = FALSE;
 181              		.loc 1 48 0 is_stmt 1
 182 0088 074B     		ldr	r3, .L10+20
 183 008a 0022     		mov	r2, #0
 184 008c 1A70     		strb	r2, [r3]
  49:../Sources/mma8453.c **** }
 185              		.loc 1 49 0
 186 008e BD46     		mov	sp, r7
 187              		@ sp needed for prologue
 188 0090 80BD     		pop	{r7, pc}
 189              	.L11:
 190 0092 C046     		.align	2
 191              	.L10:
 192 0094 00000000 		.word	MyI2CPtr
 193 0098 00000000 		.word	OutData
 194 009c 00000000 		.word	Error
 195 00a0 00000000 		.word	DataTransmittedFlg
 196 00a4 06000000 		.word	mma845x+6
 197 00a8 00000000 		.word	DataReceivedFlg
 198              		.cfi_endproc
 199              	.LFE1:
 201              		.section	.text.MMA845X_Poll,"ax",%progbits
 202              		.align	2
 203              		.global	MMA845X_Poll
 204              		.code	16
 205              		.thumb_func
 207              	MMA845X_Poll:
 208              	.LFB2:
  50:../Sources/mma8453.c **** 
  51:../Sources/mma8453.c **** /**************************************************************************//*!
  52:../Sources/mma8453.c **** *   MMA845x polling
  53:../Sources/mma8453.c **** ******************************************************************************/
  54:../Sources/mma8453.c **** void MMA845X_Poll(void)
  55:../Sources/mma8453.c **** {
 209              		.loc 1 55 0
 210              		.cfi_startproc
 211 0000 80B5     		push	{r7, lr}
 212              	.LCFI4:
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 7, -8
 215              		.cfi_offset 14, -4
 216 0002 00AF     		add	r7, sp, #0
 217              	.LCFI5:
 218              		.cfi_def_cfa_register 7
  56:../Sources/mma8453.c **** 
  57:../Sources/mma8453.c **** 	
  58:../Sources/mma8453.c **** 	if(measuring == TRANSMIT)
 219              		.loc 1 58 0
 220 0004 424B     		ldr	r3, .L20
 221 0006 1B78     		ldrb	r3, [r3]
 222 0008 012B     		cmp	r3, #1
 223 000a 1FD1     		bne	.L13
  59:../Sources/mma8453.c ****     {
  60:../Sources/mma8453.c ****       measuring = IDLE;
 224              		.loc 1 60 0
 225 000c 404B     		ldr	r3, .L20
 226 000e 0022     		mov	r2, #0
 227 0010 1A70     		strb	r2, [r3]
  61:../Sources/mma8453.c ****       measuring_last = TRANSMIT;
 228              		.loc 1 61 0
 229 0012 404B     		ldr	r3, .L20+4
 230 0014 0122     		mov	r2, #1
 231 0016 1A70     		strb	r2, [r3]
  62:../Sources/mma8453.c ****        
  63:../Sources/mma8453.c ****       OutData[0] = MMA845X_CFG_VALUE;
 232              		.loc 1 63 0
 233 0018 3F4B     		ldr	r3, .L20+8
 234 001a 0122     		mov	r2, #1
 235 001c 1A70     		strb	r2, [r3]
  64:../Sources/mma8453.c ****       Error = I2C2_MasterSendBlock(MyI2CPtr, &OutData, 1, LDD_I2C_NO_SEND_STOP); /* Send OutData (4
 236              		.loc 1 64 0
 237 001e 3F4B     		ldr	r3, .L20+12
 238 0020 1A68     		ldr	r2, [r3]
 239 0022 3D4B     		ldr	r3, .L20+8
 240 0024 101C     		mov	r0, r2
 241 0026 191C     		mov	r1, r3
 242 0028 0122     		mov	r2, #1
 243 002a 0023     		mov	r3, #0
 244 002c FFF7FEFF 		bl	I2C2_MasterSendBlock
 245 0030 031C     		mov	r3, r0
 246 0032 1A1C     		mov	r2, r3
 247 0034 3A4B     		ldr	r3, .L20+16
 248 0036 1A80     		strh	r2, [r3]
  65:../Sources/mma8453.c ****       while (!DataTransmittedFlg); 
 249              		.loc 1 65 0
 250 0038 C046     		mov	r8, r8
 251              	.L14:
 252              		.loc 1 65 0 is_stmt 0
 253 003a 3A4B     		ldr	r3, .L20+20
 254 003c 1B78     		ldrb	r3, [r3]
 255 003e DBB2     		uxtb	r3, r3
 256 0040 002B     		cmp	r3, #0
 257 0042 FAD0     		beq	.L14
  66:../Sources/mma8453.c ****       DataTransmittedFlg = FALSE;   
 258              		.loc 1 66 0 is_stmt 1
 259 0044 374B     		ldr	r3, .L20+20
 260 0046 0022     		mov	r2, #0
 261 0048 1A70     		strb	r2, [r3]
 262 004a 5EE0     		b	.L12
 263              	.L13:
  67:../Sources/mma8453.c ****     }
  68:../Sources/mma8453.c ****     else if(measuring == RECEIVE)
 264              		.loc 1 68 0
 265 004c 304B     		ldr	r3, .L20
 266 004e 1B78     		ldrb	r3, [r3]
 267 0050 022B     		cmp	r3, #2
 268 0052 5AD1     		bne	.L12
  69:../Sources/mma8453.c ****     {
  70:../Sources/mma8453.c ****       measuring = IDLE;
 269              		.loc 1 70 0
 270 0054 2E4B     		ldr	r3, .L20
 271 0056 0022     		mov	r2, #0
 272 0058 1A70     		strb	r2, [r3]
  71:../Sources/mma8453.c ****       measuring_last = RECEIVE;
 273              		.loc 1 71 0
 274 005a 2E4B     		ldr	r3, .L20+4
 275 005c 0222     		mov	r2, #2
 276 005e 1A70     		strb	r2, [r3]
  72:../Sources/mma8453.c ****       Error = I2C2_MasterReceiveBlock(MyI2CPtr, &InData, MMA845X_BUFFER_SIZE, LDD_I2C_SEND_STOP);
 277              		.loc 1 72 0
 278 0060 2E4B     		ldr	r3, .L20+12
 279 0062 1A68     		ldr	r2, [r3]
 280 0064 304B     		ldr	r3, .L20+24
 281 0066 101C     		mov	r0, r2
 282 0068 191C     		mov	r1, r3
 283 006a 0622     		mov	r2, #6
 284 006c 0123     		mov	r3, #1
 285 006e FFF7FEFF 		bl	I2C2_MasterReceiveBlock
 286 0072 031C     		mov	r3, r0
 287 0074 1A1C     		mov	r2, r3
 288 0076 2A4B     		ldr	r3, .L20+16
 289 0078 1A80     		strh	r2, [r3]
  73:../Sources/mma8453.c ****       while (!DataReceivedFlg);
 290              		.loc 1 73 0
 291 007a C046     		mov	r8, r8
 292              	.L16:
 293              		.loc 1 73 0 is_stmt 0
 294 007c 2B4B     		ldr	r3, .L20+28
 295 007e 1B78     		ldrb	r3, [r3]
 296 0080 DBB2     		uxtb	r3, r3
 297 0082 002B     		cmp	r3, #0
 298 0084 FAD0     		beq	.L16
  74:../Sources/mma8453.c ****       DataReceivedFlg = FALSE;  
 299              		.loc 1 74 0 is_stmt 1
 300 0086 294B     		ldr	r3, .L20+28
 301 0088 0022     		mov	r2, #0
 302 008a 1A70     		strb	r2, [r3]
  75:../Sources/mma8453.c **** 
  76:../Sources/mma8453.c ****       mma845_tmp = InData[1] | (InData[0] << 8);
 303              		.loc 1 76 0
 304 008c 264B     		ldr	r3, .L20+24
 305 008e 5B78     		ldrb	r3, [r3, #1]
 306 0090 1A1C     		mov	r2, r3
 307 0092 254B     		ldr	r3, .L20+24
 308 0094 1B78     		ldrb	r3, [r3]
 309 0096 1B02     		lsl	r3, r3, #8
 310 0098 9BB2     		uxth	r3, r3
 311 009a 1343     		orr	r3, r2
 312 009c 9AB2     		uxth	r2, r3
 313 009e 244B     		ldr	r3, .L20+32
 314 00a0 1A80     		strh	r2, [r3]
  77:../Sources/mma8453.c ****       mma845x.x = (mma845_tmp / MMA845X_DIVIDER);
 315              		.loc 1 77 0
 316 00a2 234B     		ldr	r3, .L20+32
 317 00a4 1B88     		ldrh	r3, [r3]
 318 00a6 1BB2     		sxth	r3, r3
 319 00a8 002B     		cmp	r3, #0
 320 00aa 00DA     		bge	.L17
 321 00ac 0333     		add	r3, r3, #3
 322              	.L17:
 323 00ae 9B10     		asr	r3, r3, #2
 324 00b0 9AB2     		uxth	r2, r3
 325 00b2 204B     		ldr	r3, .L20+36
 326 00b4 1A80     		strh	r2, [r3]
  78:../Sources/mma8453.c **** 
  79:../Sources/mma8453.c ****       mma845_tmp = InData[3] | (InData[2] << 8);
 327              		.loc 1 79 0
 328 00b6 1C4B     		ldr	r3, .L20+24
 329 00b8 DB78     		ldrb	r3, [r3, #3]
 330 00ba 1A1C     		mov	r2, r3
 331 00bc 1A4B     		ldr	r3, .L20+24
 332 00be 9B78     		ldrb	r3, [r3, #2]
 333 00c0 1B02     		lsl	r3, r3, #8
 334 00c2 9BB2     		uxth	r3, r3
 335 00c4 1343     		orr	r3, r2
 336 00c6 9AB2     		uxth	r2, r3
 337 00c8 194B     		ldr	r3, .L20+32
 338 00ca 1A80     		strh	r2, [r3]
  80:../Sources/mma8453.c ****       mma845x.y = (mma845_tmp / MMA845X_DIVIDER);
 339              		.loc 1 80 0
 340 00cc 184B     		ldr	r3, .L20+32
 341 00ce 1B88     		ldrh	r3, [r3]
 342 00d0 1BB2     		sxth	r3, r3
 343 00d2 002B     		cmp	r3, #0
 344 00d4 00DA     		bge	.L18
 345 00d6 0333     		add	r3, r3, #3
 346              	.L18:
 347 00d8 9B10     		asr	r3, r3, #2
 348 00da 9AB2     		uxth	r2, r3
 349 00dc 154B     		ldr	r3, .L20+36
 350 00de 5A80     		strh	r2, [r3, #2]
  81:../Sources/mma8453.c **** 
  82:../Sources/mma8453.c ****       mma845_tmp = InData[5] | (InData[4] << 8);     
 351              		.loc 1 82 0
 352 00e0 114B     		ldr	r3, .L20+24
 353 00e2 5B79     		ldrb	r3, [r3, #5]
 354 00e4 1A1C     		mov	r2, r3
 355 00e6 104B     		ldr	r3, .L20+24
 356 00e8 1B79     		ldrb	r3, [r3, #4]
 357 00ea 1B02     		lsl	r3, r3, #8
 358 00ec 9BB2     		uxth	r3, r3
 359 00ee 1343     		orr	r3, r2
 360 00f0 9AB2     		uxth	r2, r3
 361 00f2 0F4B     		ldr	r3, .L20+32
 362 00f4 1A80     		strh	r2, [r3]
  83:../Sources/mma8453.c ****       mma845x.z = (mma845_tmp / MMA845X_DIVIDER);   
 363              		.loc 1 83 0
 364 00f6 0E4B     		ldr	r3, .L20+32
 365 00f8 1B88     		ldrh	r3, [r3]
 366 00fa 1BB2     		sxth	r3, r3
 367 00fc 002B     		cmp	r3, #0
 368 00fe 00DA     		bge	.L19
 369 0100 0333     		add	r3, r3, #3
 370              	.L19:
 371 0102 9B10     		asr	r3, r3, #2
 372 0104 9AB2     		uxth	r2, r3
 373 0106 0B4B     		ldr	r3, .L20+36
 374 0108 9A80     		strh	r2, [r3, #4]
 375              	.L12:
  84:../Sources/mma8453.c **** 
  85:../Sources/mma8453.c ****       //printf("%d", mma845x.y);
  86:../Sources/mma8453.c ****       //printf("\n");
  87:../Sources/mma8453.c ****     }
  88:../Sources/mma8453.c **** }
 376              		.loc 1 88 0
 377 010a BD46     		mov	sp, r7
 378              		@ sp needed for prologue
 379 010c 80BD     		pop	{r7, pc}
 380              	.L21:
 381 010e C046     		.align	2
 382              	.L20:
 383 0110 00000000 		.word	measuring
 384 0114 00000000 		.word	measuring_last
 385 0118 00000000 		.word	OutData
 386 011c 00000000 		.word	MyI2CPtr
 387 0120 00000000 		.word	Error
 388 0124 00000000 		.word	DataTransmittedFlg
 389 0128 00000000 		.word	InData
 390 012c 00000000 		.word	DataReceivedFlg
 391 0130 00000000 		.word	mma845_tmp
 392 0134 00000000 		.word	mma845x
 393              		.cfi_endproc
 394              	.LFE2:
 396              		.text
 397              	.Letext0:
 398              		.file 2 "D:/CodeWarrior/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 399              		.file 3 "D:/PlikiI/Synergia/Jacht/workspace_yacht/I2C_1/Generated_Code/PE_Types.h"
 400              		.file 4 "../Sources/mma8453.h"
DEFINED SYMBOLS
                            *ABS*:00000000 mma8453.c
                            *COM*:00000001 DataReceivedFlg
                            *COM*:00000001 DataTransmittedFlg
                            *COM*:00000002 OutData
                            *COM*:00000006 InData
                            *COM*:00000002 mma845_tmp
                            *COM*:00000008 mma845x
                            *COM*:00000002 Error
                            *COM*:00000004 MyI2CPtr
                            *COM*:00000004 MyTimerPtr
                            *COM*:00000001 measuring
                            *COM*:00000001 measuring_last
C:\Users\SKRA~1\AppData\Local\Temp\ccyFAeFV.s:29     .text.Timer_Interrupt_CB:00000000 $t
C:\Users\SKRA~1\AppData\Local\Temp\ccyFAeFV.s:34     .text.Timer_Interrupt_CB:00000000 Timer_Interrupt_CB
C:\Users\SKRA~1\AppData\Local\Temp\ccyFAeFV.s:80     .text.Timer_Interrupt_CB:00000030 $d
C:\Users\SKRA~1\AppData\Local\Temp\ccyFAeFV.s:86     .text.MMA845X_Init:00000000 $t
C:\Users\SKRA~1\AppData\Local\Temp\ccyFAeFV.s:91     .text.MMA845X_Init:00000000 MMA845X_Init
C:\Users\SKRA~1\AppData\Local\Temp\ccyFAeFV.s:192    .text.MMA845X_Init:00000094 $d
C:\Users\SKRA~1\AppData\Local\Temp\ccyFAeFV.s:202    .text.MMA845X_Poll:00000000 $t
C:\Users\SKRA~1\AppData\Local\Temp\ccyFAeFV.s:207    .text.MMA845X_Poll:00000000 MMA845X_Poll
C:\Users\SKRA~1\AppData\Local\Temp\ccyFAeFV.s:383    .text.MMA845X_Poll:00000110 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
I2C2_MasterSendBlock
I2C2_MasterReceiveBlock
